<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_d_a_e3_projection_solver_8m" kind="file" language="C++">
    <compoundname>DAE3ProjectionSolver.m</compoundname>
    <innerclass refid="class_d_a_e3_projection_solver" prot="public">DAE3ProjectionSolver</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%<sp/>Matlab<sp/>code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>Course:</highlight></codeline>
<codeline lineno="3"><highlight class="normal">%</highlight></codeline>
<codeline lineno="4"><highlight class="normal">%<sp/><sp/><sp/><sp/><sp/>Modelling<sp/>and<sp/>Simulation<sp/>of<sp/>Mechatronics<sp/>System</highlight></codeline>
<codeline lineno="5"><highlight class="normal">%</highlight></codeline>
<codeline lineno="6"><highlight class="normal">%<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="normal">%<sp/>Enrico<sp/>Bertolazzi</highlight></codeline>
<codeline lineno="8"><highlight class="normal">%<sp/>Dipartimento<sp/>di<sp/>Ingegneria<sp/>Industriale</highlight></codeline>
<codeline lineno="9"><highlight class="normal">%<sp/>Universita`<sp/>degli<sp/>Studi<sp/>di<sp/>Trento</highlight></codeline>
<codeline lineno="10"><highlight class="normal">%<sp/>email:<sp/>enrico.bertolazzi@unitn.it</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%</highlight></codeline>
<codeline lineno="12" refid="class_d_a_e3_projection_solver" refkind="compound"><highlight class="normal">classdef<sp/><ref refid="class_d_a_e3_projection_solver" kindref="compound">DAE3ProjectionSolver</ref><sp/>&lt;<sp/>handle</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>properties<sp/>(SetAccess<sp/>=<sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">,<sp/>Hidden<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>solverName;<sp/>%<sp/>should<sp/>contain<sp/>the<sp/>name<sp/>of<sp/>the<sp/>numerical<sp/>method<sp/>used</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>DAEclass;<sp/><sp/><sp/>%<sp/>the<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>storing<sp/>the<sp/>DAE</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>RKclass;<sp/><sp/><sp/><sp/>%<sp/>the<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>storing<sp/>the<sp/>RK<sp/>solver</highlight></codeline>
<codeline lineno="17" refid="class_d_a_e3_projection_solver_1a48e3749bf62f5f0d8ee409a179ee7f85" refkind="member"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_d_a_e3_projection_solver_1af182fee8efa8c13ea63ab13b30a1162f" refkind="member"><highlight class="normal"><sp/><sp/>methods</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>self<sp/>=<sp/><ref refid="class_d_a_e3_projection_solver" kindref="compound">DAE3ProjectionSolver</ref>()</highlight></codeline>
<codeline lineno="21" refid="class_d_a_e3_projection_solver_1ace35e8dac054e9e7003f6f8371ae1a9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.solverName<sp/>=<sp/>&apos;<ref refid="class_d_a_e3_projection_solver" kindref="compound">DAE3ProjectionSolver</ref>&apos;;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>delete(<sp/>self<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="26" refid="class_d_a_e3_projection_solver_1a070f20203056023b8f7bffe1c0c46a54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>name<sp/>=<sp/>getName(<sp/>self<sp/>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>self.solverName;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="31" refid="class_d_a_e3_projection_solver_1a40837aede3bf14e134bbc25ccb9f47f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>setDAE(<sp/>self,<sp/>DAEclass<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.DAEclass<sp/>=<sp/>DAEclass;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="35" refid="class_d_a_e3_projection_solver_1a10f0cc6d6de08614500833f74c723cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>setRK(<sp/>self,<sp/>RKclass<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.RKclass<sp/>=<sp/>RKclass;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>form<sp/>the<sp/>index<sp/>1<sp/>DAE</highlight></codeline>
<codeline lineno="40" refid="class_d_a_e3_projection_solver_1a17954cf23a1a2fb44a94a3565c7c8568" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>q&apos;<sp/>=<sp/>v</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>v&apos;<sp/>=<sp/>v_dot</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>M(t,p)<sp/>v_dot<sp/>+<sp/>Phi_p(t,q)^T<sp/>lambda<sp/>=<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Phi_q(t,q)v_dot<sp/>=<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="45" refid="class_d_a_e3_projection_solver_1aef234e5765711ea9232eb15965d5705a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>solve<sp/>the<sp/>linear<sp/>system</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>/<sp/>M(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>Phi_p(t,q)^T<sp/>\<sp/>/<sp/><sp/><sp/>v&apos;<sp/><sp/><sp/>\<sp/><sp/><sp/>/<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>=<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>\<sp/>Phi_p(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>\<sp/>lambda<sp/>/<sp/><sp/><sp/>\<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>To<sp/>obtain<sp/>the<sp/>ODE</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>q&apos;<sp/>=<sp/>v</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>v&apos;<sp/>=<sp/>v_dot(t,q,v)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>rhs<sp/>=<sp/>f(<sp/>self,<sp/>t,<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/>=<sp/>x(1:n);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/><sp/><sp/>=<sp/>x(n+1:end);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.M(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Phi_q<sp/>=<sp/>self.DAEclass.Phi_q(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.gforce(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.b(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>solve<sp/>for<sp/>v&apos;<sp/>and<sp/>lambda</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/><sp/><sp/><sp/>=<sp/>[<sp/>M,<sp/>Phi_q.&apos;;<sp/>Phi_q,<sp/>zeros(m,m)<sp/>]\[f;b];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/><sp/><sp/>=<sp/>[<sp/>vel;<sp/>vl(1:n)<sp/>];</highlight></codeline>
<codeline lineno="67" refid="class_d_a_e3_projection_solver_1ac694541d85e1afca63a23ab4b7abe4c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>form<sp/>the<sp/>index<sp/>1<sp/>DAE</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>q&apos;<sp/>=<sp/>v</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>v&apos;<sp/>=<sp/>v_dot</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>M(t,p)<sp/>v_dot<sp/>+<sp/>Phi_p(t,q)^T<sp/>lambda<sp/>=<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Phi_q(t,q)v_dot<sp/>=<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>solve<sp/>the<sp/>linear<sp/>system</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>/<sp/>M(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>Phi_p(t,q)^T<sp/>\<sp/>/<sp/><sp/><sp/>v&apos;<sp/><sp/><sp/>\<sp/><sp/><sp/>/<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>=<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>\<sp/>Phi_p(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>\<sp/>lambda<sp/>/<sp/><sp/><sp/>\<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>To<sp/>obtain<sp/>the<sp/>ODE</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>q&apos;<sp/>=<sp/>v</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>v&apos;<sp/>=<sp/>v_dot(t,q,v)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>Jac<sp/>=<sp/>DfDx(<sp/>self,<sp/>t,<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/><sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/>=<sp/>x(1:n);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/><sp/><sp/><sp/>=<sp/>x(n+1:end);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.M(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Phi_q<sp/><sp/>=<sp/>self.DAEclass.Phi_q(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.gforce(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.b(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>solve<sp/>for<sp/>v&apos;<sp/>and<sp/>lambda</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/><sp/><sp/><sp/>=<sp/>[<sp/>M,<sp/>Phi_q.&apos;;<sp/>Phi_q,<sp/>zeros(m,m)<sp/>];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/><sp/><sp/><sp/><sp/>=<sp/>Mat\[f;b];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_dot<sp/><sp/>=<sp/>vl(1:n);</highlight></codeline>
<codeline lineno="98" refid="class_d_a_e3_projection_solver_1af06dc171a84bf72f5bbcd9760a0a88e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lambda<sp/>=<sp/>vl(n+1:end);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.gforce_q(<sp/>t,<sp/>pos,<sp/>vel<sp/>)<sp/>...</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>self.DAEclass.W_q(<sp/>t,<sp/>pos,<sp/>v_dot<sp/>)<sp/>...</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>self.DAEclass.PhiL_q(<sp/>t,<sp/>pos,<sp/>lambda<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.b_q(<sp/>t,<sp/>pos,<sp/>vel<sp/>)<sp/>...</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>self.DAEclass.PhiV_q(<sp/>t,<sp/>pos,<sp/>v_dot<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/><sp/><sp/><sp/><sp/>=<sp/>Mat\[aa;bb];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_D_q<sp/><sp/>=<sp/>vl(1:n,:);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.gforce_v(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.b_v(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/><sp/><sp/><sp/><sp/>=<sp/>Mat\[aa;bb];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_D_v<sp/><sp/>=<sp/>vl(1:n,:);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Jac<sp/><sp/><sp/><sp/>=<sp/>[<sp/>zeros(n,n),<sp/>eye(n);<sp/>v_D_q,<sp/>v_D_v<sp/>];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>form<sp/>the<sp/>index<sp/>1<sp/>DAE</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>q&apos;<sp/>=<sp/>v</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>M(t,p)<sp/>v&apos;<sp/>+<sp/>Phi_p(t,q)^T<sp/>lambda<sp/>=<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Phi_q(t,q)<sp/>v&apos;<sp/>=<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>solve<sp/>the<sp/>linear<sp/>system</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>/<sp/>M(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>Phi_p(t,q)^T<sp/>\<sp/>/<sp/><sp/><sp/>v&apos;<sp/><sp/><sp/>\<sp/><sp/><sp/>/<sp/>f(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>=<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>\<sp/>Phi_p(t,q)<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>\<sp/>lambda<sp/>/<sp/><sp/><sp/>\<sp/>b(<sp/>t,<sp/>q,<sp/>v<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>To<sp/>obtain<sp/>lambda</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>lbd<sp/>=<sp/>lambda(<sp/>self,<sp/>t,<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/>=<sp/>x(1:n);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/><sp/><sp/>=<sp/>x(n+1:end);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.M(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Phi_q<sp/>=<sp/>self.DAEclass.Phi_q(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.gforce(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/><sp/><sp/>=<sp/>self.DAEclass.b(<sp/>t,<sp/>pos,<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>solve<sp/>for<sp/>v&apos;<sp/>and<sp/>lambda</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/><sp/><sp/><sp/>=<sp/>[<sp/>M,<sp/>Phi_q.&apos;;<sp/>Phi_q,<sp/>zeros(m,m)<sp/>]\[f;b];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbd<sp/><sp/><sp/>=<sp/>vl(n+1,end);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="139" refid="class_d_a_e3_projection_solver_1a4fed36a0a3a1679af4c82a251ff66f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Solve<sp/>the<sp/>problem</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>minimize<sp/><sp/><sp/><sp/><sp/><sp/>1/2<sp/>*<sp/>(q-qbar)^2</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>subject<sp/>to<sp/><sp/><sp/><sp/>Phi(<sp/>q,<sp/>tbar<sp/>)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>projected_pos<sp/>=<sp/>project_position(<sp/>self,<sp/>t,<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/><sp/><sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu<sp/><sp/>=<sp/>zeros(m,1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tol<sp/>=<sp/>norm(pos,inf)*sqrt(eps);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k=1:10</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>self.DAEclass.Phi(<sp/>t,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/>=<sp/>self.DAEclass.Phi_q(<sp/>t,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dql<sp/>=<sp/>[<sp/>eye(n),<sp/>M.&apos;;<sp/>M,<sp/>zeros(m,m)<sp/>]<sp/>\<sp/>[<sp/>(pos-q)<sp/>-<sp/>(M.&apos;<sp/>*<sp/>mu);-phi];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/><sp/><sp/>=<sp/>q<sp/>+<sp/>Dql(1:n);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu<sp/><sp/>=<sp/>mu<sp/>+<sp/>Dql(n+1:end);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>max(abs(Dql))<sp/>&lt;<sp/>tol</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="159" refid="class_d_a_e3_projection_solver_1a085d23f8d27d5d8ea793fb8501cc1dc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>projected_pos<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Solve<sp/>the<sp/>problem</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>minimize<sp/><sp/><sp/><sp/><sp/><sp/>1/2<sp/>*<sp/>(v-vbar)^2</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>subject<sp/>to<sp/><sp/><sp/><sp/>Phi_q(<sp/>tbar,<sp/>q<sp/>)<sp/>v<sp/>+<sp/>Phi_t(<sp/>tbar,<sp/>t<sp/>)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>projected_vel<sp/>=<sp/>project_velocity(<sp/>self,<sp/>t,<sp/>pos,<sp/>vel<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/>=<sp/>self.DAEclass.Phi_q(<sp/>t,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>=<sp/>self.DAEclass.Phi_t(<sp/>t,<sp/>pos<sp/>)<sp/>+<sp/>A*vel;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vmu<sp/>=<sp/>[<sp/>eye(n),<sp/>A.&apos;;<sp/>A,<sp/>zeros(m,m)<sp/>]<sp/>\<sp/>[<sp/>vel;<sp/>-b<sp/>];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>projected_vel<sp/>=<sp/>vmu(1:n);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>step<sp/>is<sp/>a<sp/>generic<sp/>advancing<sp/>step<sp/>for<sp/>a<sp/>generic<sp/>numerical<sp/>methods</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>given<sp/>x0<sp/>=<sp/>x(t0)<sp/>return<sp/>the<sp/>approximation<sp/>of<sp/>x(t0+dt)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>x1<sp/>=<sp/>step(<sp/>self,<sp/>x0,<sp/>t0,<sp/>dt<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="184" refid="class_d_a_e3_projection_solver_1a996c00e92eb262bea84a3893d107dd35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>advance<sp/>using<sp/>RK<sp/>Method</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/><sp/><sp/><sp/>=<sp/>self.RKclass.step(<sp/>x0,<sp/>t0,<sp/>dt<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/><sp/><sp/><sp/>=<sp/>t0+dt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>project<sp/>solution</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/>=<sp/>self.project_position(<sp/>t1,<sp/>x1(1:n)<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/><sp/><sp/>=<sp/>self.project_velocity(<sp/>t1,<sp/>pos,<sp/>x1(n+1:end)<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/><sp/><sp/><sp/>=<sp/>[<sp/>pos;<sp/>vel<sp/>];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>compute<sp/>approximate<sp/>solution<sp/>on<sp/>a<sp/>series<sp/>of<sp/>point<sp/>given<sp/>by<sp/>the<sp/>vector<sp/>t</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>starting<sp/>at<sp/>initial<sp/>point<sp/>pos0,<sp/>vel0</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>[<sp/>pos,<sp/>vel,<sp/>varargout<sp/>]<sp/>=<sp/>advance(<sp/>self,<sp/>t,<sp/>pos0,<sp/>vel0<sp/>)</highlight></codeline>
<codeline lineno="198" refid="class_d_a_e3_projection_solver_1ac244e2fa36ac0ec328f2464598c654f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.RKclass.setODE(<sp/>self<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[n,m]<sp/><sp/>=<sp/>self.DAEclass.getDim();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>zeros(2*n,length(t));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x(:,1)<sp/>=<sp/>[pos0(:);vel0(:)];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k=1:length(t)-1</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(:,k+1)<sp/>=<sp/>self.step(<sp/>t(k),<sp/>x(:,k),<sp/>t(k+1)-t(k)<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>x(1:n,:);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>x(n+1:end,:);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>if<sp/>required<sp/>compute<sp/>lambda</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>nargout<sp/>&gt;<sp/>2</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda<sp/>=<sp/>zeros(m,length(t));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k=1:length(t)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda(:,k)<sp/>=<sp/>self.lambda(<sp/>t(k),<sp/>x(:,k)<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="214" refid="class_d_a_e3_projection_solver_1a0c88f00848b884cfd1973a21d3f2e004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="216"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="/Users/enrico/Ricerca/papers/_didattica/Didattica/github-2020-courseModellingAndSimulationOfMechatronicsSystem/toolbox/lib/DAE/DAE3ProjectionSolver.m"/>
  </compounddef>
</doxygen>
