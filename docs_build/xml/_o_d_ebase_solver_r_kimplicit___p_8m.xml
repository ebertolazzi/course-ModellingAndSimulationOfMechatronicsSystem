<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_o_d_ebase_solver_r_kimplicit___p_8m" kind="file" language="C++">
    <compoundname>ODEbaseSolverRKimplicit_P.m</compoundname>
    <innerclass refid="class_o_d_ebase_solver_r_kimplicit___p" prot="public">ODEbaseSolverRKimplicit_P</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">%</highlight></codeline>
<codeline lineno="2"><highlight class="normal">%<sp/>Matlab<sp/>code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>Course:</highlight></codeline>
<codeline lineno="3"><highlight class="normal">%</highlight></codeline>
<codeline lineno="4"><highlight class="normal">%<sp/><sp/><sp/><sp/><sp/>Modelling<sp/>and<sp/>Simulation<sp/>of<sp/>Mechatronics<sp/>System</highlight></codeline>
<codeline lineno="5"><highlight class="normal">%</highlight></codeline>
<codeline lineno="6"><highlight class="normal">%<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="normal">%<sp/>Enrico<sp/>Bertolazzi</highlight></codeline>
<codeline lineno="8"><highlight class="normal">%<sp/>Dipartimento<sp/>di<sp/>Ingegneria<sp/>Industriale</highlight></codeline>
<codeline lineno="9"><highlight class="normal">%<sp/>Universita`<sp/>degli<sp/>Studi<sp/>di<sp/>Trento</highlight></codeline>
<codeline lineno="10"><highlight class="normal">%<sp/>email:<sp/>enrico.bertolazzi@unitn.it</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%</highlight></codeline>
<codeline lineno="12" refid="class_o_d_ebase_solver_r_kimplicit___p" refkind="compound"><highlight class="normal">classdef<sp/><ref refid="class_o_d_ebase_solver_r_kimplicit___p" kindref="compound">ODEbaseSolverRKimplicit_P</ref><sp/>&lt;<sp/><ref refid="class_o_d_ebase_solver___p" kindref="compound">ODEbaseSolver_P</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>properties<sp/>(SetAccess<sp/>=<sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">,<sp/>Hidden<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>x0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>t0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>dt;</highlight></codeline>
<codeline lineno="17" refid="class_o_d_ebase_solver_r_kimplicit___p_1a5bf0c3aa6ec03d4c945677312434220b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tol;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>A;<sp/>%<sp/>tableau</highlight></codeline>
<codeline lineno="19" refid="class_o_d_ebase_solver_r_kimplicit___p_1a842bb2b0e80b21cbf6f50489abfb4245" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>b;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>c;</highlight></codeline>
<codeline lineno="21" refid="class_o_d_ebase_solver_r_kimplicit___p_1a0f9c454e6f24c43b67cb09ebcac1c5f3" refkind="member"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>methods</highlight></codeline>
<codeline lineno="23" refid="class_o_d_ebase_solver_r_kimplicit___p_1aaee5a4c887229fea1c6eb6eb7f681ad1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>self<sp/>=<sp/><ref refid="class_o_d_ebase_solver_r_kimplicit___p" kindref="compound">ODEbaseSolverRKimplicit_P</ref>(<sp/>solverName,<sp/>A,<sp/>b,<sp/>c<sp/>)</highlight></codeline>
<codeline lineno="25" refid="class_o_d_ebase_solver_r_kimplicit___p_1aacb9ccf78f5c261e2194b058118f7f28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self@<ref refid="class_o_d_ebase_solver___p" kindref="compound">ODEbaseSolver_P</ref>(<sp/>solverName<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.tol<sp/>=<sp/>1e-8;</highlight></codeline>
<codeline lineno="27" refid="class_o_d_ebase_solver_r_kimplicit___p_1aa30f5474c2e8cfb303329499370888be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.A<sp/><sp/><sp/>=<sp/>A;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.b<sp/><sp/><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="29" refid="class_o_d_ebase_solver_r_kimplicit___p_1af9e3786d6e53d33c42c5f35a71ab839f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.c<sp/><sp/><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>delete(<sp/>self<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="34" refid="class_o_d_ebase_solver_r_kimplicit___p_1a6ffca5716911227747d3eb21030ed693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>for<sp/>the<sp/>implicit<sp/>RK<sp/>methods</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>x(k+1)<sp/>=<sp/>x(k)<sp/>+<sp/>sum(j)<sp/>b(j)<sp/>*<sp/>K(k)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>K(i)<sp/>=<sp/>h*f(<sp/>t(k)<sp/>+<sp/>c(i)<sp/>*<sp/>dt,<sp/>x(k)<sp/>+<sp/>sum(j)<sp/>A(i,j)<sp/>K(j)<sp/>),<sp/>i=1..s</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>define<sp/>the<sp/>nonlinear<sp/>system</highlight></codeline>
<codeline lineno="43" refid="class_o_d_ebase_solver_r_kimplicit___p_1a22a9c04d84c242e7da4f0fb15e458a36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>K(1)<sp/>-<sp/>h<sp/>*<sp/>f(<sp/>t(k)+c(1)*dt,<sp/>x(k)<sp/>+<sp/>sum(j)<sp/>A(1,j)<sp/>K(j)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>residual(<sp/>K<sp/>)<sp/>=<sp/>|<sp/>....<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\<sp/>K(s)<sp/>-<sp/>h<sp/>*<sp/>f(<sp/>t(k)+c(s)*dt,<sp/>x(k)<sp/>+<sp/>sum(j)<sp/>A(s,j)<sp/>K(j)<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>R<sp/>=<sp/>stepResidual(<sp/>self,<sp/>K<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/><sp/>=<sp/>length(self.c);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/><sp/>=<sp/>length(self.x0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/><sp/><sp/>=<sp/>zeros(ns*nx,1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>1:nx;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i=1:ns</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>self.x0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>1:nx;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>j=1:ns</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>+<sp/>self.A(i,j)<sp/>*<sp/>K(jdx);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>jdx<sp/>+<sp/>nx;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="61" refid="class_o_d_ebase_solver_r_kimplicit___p_1aab1e1f95eab693e5d4d02da75543b68c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/><sp/><sp/><sp/><sp/>=<sp/>self.t0<sp/>+<sp/>self.c(i)<sp/>*<sp/>self.dt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R(idx)<sp/>=<sp/>K(idx)<sp/>-<sp/>self.dt<sp/>*<sp/>self.odeClass.f(<sp/>ti,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/><sp/><sp/><sp/>=<sp/>idx<sp/>+<sp/>nx;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Jacobian<sp/>o<sp/>the<sp/>residual</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>D<sp/>residual(<sp/>K<sp/>)<sp/>/<sp/>DK</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>JR<sp/>=<sp/>stepResidualJacobian(<sp/>self,<sp/>K<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/><sp/>=<sp/>length(self.c);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/><sp/>=<sp/>length(self.x0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JR<sp/><sp/>=<sp/>eye(ns*nx);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>1:nx;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i=1:ns</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>self.x0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>1:nx;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>j=1:ns</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>+<sp/>self.A(i,j)<sp/>*<sp/>K(jdx);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>jdx<sp/>+<sp/>nx;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>=<sp/>self.t0<sp/>+<sp/>self.c(i)<sp/>*<sp/>self.dt;</highlight></codeline>
<codeline lineno="84" refid="class_o_d_ebase_solver_r_kimplicit___p_1a58dedfb7c7825a59823f55ac1efa9e2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>1:nx;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>j=1:ns</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JR(idx,jdx)<sp/>=<sp/>JR(idx,jdx)<sp/>-<sp/>self.dt<sp/>*<sp/>self.odeClass.DfDx(<sp/>ti,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jdx<sp/>=<sp/>jdx<sp/>+<sp/>nx;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>idx<sp/>+<sp/>nx;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>K<sp/>=<sp/>solveStepByNewton(<sp/>self<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>=<sp/>length(<sp/>self.c<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K0<sp/>=<sp/>self.dt<sp/>*<sp/>self.odeClass.f(<sp/>self.t0,<sp/>self.x0<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/><sp/>=<sp/>repmat(<sp/>K0(:),<sp/>ns,<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/>@(K)<sp/>self.stepResidual(<sp/>K<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jac<sp/>=<sp/>@(K)<sp/>self.stepResidualJacobian(<sp/>K<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[K,ierr]<sp/>=<sp/>NewtonSolver(<sp/>fun,<sp/>jac,<sp/>K<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>ierr<sp/>~=<sp/>0</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>1,<sp/>&apos;solveStepByNewton<sp/>do<sp/>not<sp/>converge<sp/>ierr<sp/>=<sp/>%d\n&apos;,<sp/>ierr<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/><sp/>Perform<sp/>an<sp/>implicit<sp/>step<sp/>by<sp/>solving<sp/>residual(<sp/>x,<sp/>x0<sp/>)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>%</highlight></codeline>
<codeline lineno="108" refid="class_o_d_ebase_solver_r_kimplicit___p_1a1da6a419f39d5dc331144abd0ec737ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>x1<sp/>=<sp/>step(<sp/>self,<sp/>t0,<sp/>x0,<sp/>dt<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.t0<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.x0<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.dt<sp/>=<sp/>dt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/><sp/>=<sp/>length(self.c);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/><sp/>=<sp/>length(x0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/><sp/><sp/>=<sp/>self.solveStepByNewton();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/><sp/>=<sp/>x0<sp/>+<sp/>reshape(<sp/>K,<sp/>nx,<sp/>ns<sp/>)<sp/>*<sp/>self.b(:);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>%<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="/Users/enrico/Ricerca/papers/_didattica/Didattica/github-2020-courseModellingAndSimulationOfMechatronicsSystem/toolbox/lib/ODE_P/ODEbaseSolverRKimplicit_P.m"/>
  </compounddef>
</doxygen>
