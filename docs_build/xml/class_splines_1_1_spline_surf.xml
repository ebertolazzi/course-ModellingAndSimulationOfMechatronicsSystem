<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_splines_1_1_spline_surf" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Splines::SplineSurf</compoundname>
    <derivedcompoundref refid="class_splines_1_1_bi_cubic_spline_base" prot="public" virt="non-virtual">Splines::BiCubicSplineBase</derivedcompoundref>
    <derivedcompoundref refid="class_splines_1_1_bi_quintic_spline_base" prot="public" virt="non-virtual">Splines::BiQuinticSplineBase</derivedcompoundref>
    <derivedcompoundref refid="class_splines_1_1_bilinear_spline" prot="public" virt="non-virtual">Splines::BilinearSpline</derivedcompoundref>
    <includes refid="_splines_8hh" local="no">Splines.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a12deccd2edadc07e574612b0bd1c14cb" prot="private" static="no" mutable="no">
        <type>Utils::Malloc&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt;</type>
        <definition>Utils::Malloc&lt;real_type&gt; Splines::SplineSurf::m_mem</definition>
        <argsstring></argsstring>
        <name>m_mem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="806" column="19" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a7dd53d3e07186af9ae150729aad96f63" prot="private" static="no" mutable="no">
        <type>string const</type>
        <definition>string const Splines::SplineSurf::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="810" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a6045607f74b5859258ba2429555e3870" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::m_x_closed</definition>
        <argsstring></argsstring>
        <name>m_x_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="811" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a8ef93eb714f9b2c45b91f33f1ab82bba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::m_y_closed</definition>
        <argsstring></argsstring>
        <name>m_y_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="812" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a4e9f9cd043d1dbc411a26541dff65b85" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::m_x_can_extend</definition>
        <argsstring></argsstring>
        <name>m_x_can_extend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="813" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1abf321b0864f8b46cb72f4eb2e091b23f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::m_y_can_extend</definition>
        <argsstring></argsstring>
        <name>m_y_can_extend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="814" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="814" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a2fb6b40e7e292e0ddee2edd1501b5153" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::m_nx</definition>
        <argsstring></argsstring>
        <name>m_nx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="816" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a24206eb148d1265f4d0dfe1214fe4cf9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::m_ny</definition>
        <argsstring></argsstring>
        <name>m_ny</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="817" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a629230f38c333aaff7b49622c07f4c85" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSurf::m_X</definition>
        <argsstring></argsstring>
        <name>m_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="819" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a4053092e6d717cb951242d343155b56a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSurf::m_Y</definition>
        <argsstring></argsstring>
        <name>m_Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="820" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a1504e9f87a2e44645b492df3b0f734dd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSurf::m_Z</definition>
        <argsstring></argsstring>
        <name>m_Z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="821" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1af4d745c5b7aef5d0450ae44b4e4eb427" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::m_Z_min</definition>
        <argsstring></argsstring>
        <name>m_Z_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="823" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a53b4966292fd7cd9a36c1e2eec947055" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::m_Z_max</definition>
        <argsstring></argsstring>
        <name>m_Z_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="823" column="23" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a50bb24750a8130aeb2e51c0895150279" prot="private" static="no" mutable="yes">
        <type>Utils::BinarySearch&lt; <ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref> &gt;</type>
        <definition>Utils::BinarySearch&lt;integer&gt; Splines::SplineSurf::m_bs_x</definition>
        <argsstring></argsstring>
        <name>m_bs_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="825" column="33" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_surf_1a390e5de8a5983495e7e9e9a806bf56c1" prot="private" static="no" mutable="yes">
        <type>Utils::BinarySearch&lt; <ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref> &gt;</type>
        <definition>Utils::BinarySearch&lt;integer&gt; Splines::SplineSurf::m_bs_y</definition>
        <argsstring></argsstring>
        <name>m_bs_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="826" column="33" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="826" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a41eab4de4cdba86394780625d9a0ea9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splines::SplineSurf::SplineSurf</definition>
        <argsstring>(SplineSurf const &amp;)=delete</argsstring>
        <name>SplineSurf</name>
        <param>
          <type><ref refid="class_splines_1_1_spline_surf" kindref="compound">SplineSurf</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="803" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a171a17afcb0d1ea9c6e9817689ea0f1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splines_1_1_spline_surf" kindref="compound">SplineSurf</ref> const  &amp;</type>
        <definition>SplineSurf const&amp; Splines::SplineSurf::operator=</definition>
        <argsstring>(SplineSurf const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_splines_1_1_spline_surf" kindref="compound">SplineSurf</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="804" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a12ec69b4415b2d83c6e1508fdd2f82fe" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::search_x</definition>
        <argsstring>(real_type &amp;x) const</argsstring>
        <name>search_x</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="828" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.cc" bodystart="234" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ab4777d76c7657ebfb1f247e567bdf5b3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::search_y</definition>
        <argsstring>(real_type &amp;y) const</argsstring>
        <name>search_y</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="829" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.cc" bodystart="257" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a2abdacfa040c56cfce1a3a36c6bc3bcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::initLastInterval_x</definition>
        <argsstring>()</argsstring>
        <name>initLastInterval_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="831" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.cc" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a50798b7830d42cd4786f50d754a040c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::initLastInterval_y</definition>
        <argsstring>()</argsstring>
        <name>initLastInterval_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="832" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.cc" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ac1222ace02fbb349788f6f10b4be72e5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::ipos_C</definition>
        <argsstring>(integer i, integer j, integer ldZ) const</argsstring>
        <name>ipos_C</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ldZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="835" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="835" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ac6832695c61c3a03a57512c2c7e30bae" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::ipos_F</definition>
        <argsstring>(integer i, integer j, integer ldZ) const</argsstring>
        <name>ipos_F</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ldZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="839" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="839" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4949e07a4199f7828df281745fd3eee8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::ipos_C</definition>
        <argsstring>(integer i, integer j) const</argsstring>
        <name>ipos_C</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="843" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="843" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4db57d1a55b21307056bcc85fb0643db" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::ipos_F</definition>
        <argsstring>(integer i, integer j) const</argsstring>
        <name>ipos_F</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="847" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="847" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ab5b42703165828af1de9adb0a50e290a" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Splines::SplineSurf::makeSpline</definition>
        <argsstring>()=0</argsstring>
        <name>makeSpline</name>
        <reimplementedby refid="class_splines_1_1_akima2_dspline_1a01aeadf0f9b8e4707ca955994e103a65">makeSpline</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_1a3f14b9c5cf269e200e27950849fd3926">makeSpline</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1ac3f9c981b67c217e66a8f0aa546ef6f4">makeSpline</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_1a7b808faab92f620d05f421815bf5c241">makeSpline</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="850" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a0ce41641732a5ecc623ca8bd342e637f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Splines::SplineSurf::SplineSurf</definition>
        <argsstring>(string const &amp;name=&quot;Spline&quot;)</argsstring>
        <name>SplineSurf</name>
        <param>
          <type>string const &amp;</type>
          <declname>name</declname>
          <defval>&quot;Spline&quot;</defval>
        </param>
        <briefdescription>
<para>spline constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="855" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="855" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a8c3e6c8be68c1d8cf8f36e8e5f39b924" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Splines::SplineSurf::~SplineSurf</definition>
        <argsstring>()</argsstring>
        <name>~SplineSurf</name>
        <briefdescription>
<para>spline destructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="876" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="35" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ae81c57bd20e9a56f6ec34ab179e0a77e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::is_x_closed</definition>
        <argsstring>() const</argsstring>
        <name>is_x_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="878" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="878" bodyend="878"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a2ac53cea39786a8e535f18f27d752945" compoundref="_splines2_d_8hxx" startline="47" endline="47">Splines::Spline2D::is_x_closed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1aadb608b2bee5ac6d90972381db7fc474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_x_closed</definition>
        <argsstring>()</argsstring>
        <name>make_x_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="879" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="879" bodyend="879"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a80680bd3f3335a6985479c3d1910b2e7" compoundref="_splines2_d_8hxx" startline="48" endline="48">Splines::Spline2D::make_x_closed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1abb54ecfeafaac4593d1b0c3788761b7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_x_opened</definition>
        <argsstring>()</argsstring>
        <name>make_x_opened</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="880" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="880" bodyend="880"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ad5d7d326cdbcb425cb753761e3f073ff" compoundref="_splines2_d_8hxx" startline="49" endline="49">Splines::Spline2D::make_x_opened</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4b41e49135b384f4a7d61691bf697121" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::is_y_closed</definition>
        <argsstring>() const</argsstring>
        <name>is_y_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="882" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="882" bodyend="882"/>
        <referencedby refid="class_splines_1_1_spline2_d_1aa727a21a450628f93c7f31c12719e10a" compoundref="_splines2_d_8hxx" startline="51" endline="51">Splines::Spline2D::is_y_closed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1aab6a52592ebe995f675fc2a7f53c52f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_y_closed</definition>
        <argsstring>()</argsstring>
        <name>make_y_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="883" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="883" bodyend="883"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a11a39d51cfd79ed23efa3ebe685f6241" compoundref="_splines2_d_8hxx" startline="52" endline="52">Splines::Spline2D::make_y_closed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1af537a09f1f219b07544f016c925206f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_y_opened</definition>
        <argsstring>()</argsstring>
        <name>make_y_opened</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="884" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="884" bodyend="884"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a76b9b2aca48aa7ae66643bde27184bf8" compoundref="_splines2_d_8hxx" startline="53" endline="53">Splines::Spline2D::make_y_opened</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1af973208e1cb61064310b805c94373fdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::is_x_bounded</definition>
        <argsstring>() const</argsstring>
        <name>is_x_bounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="886" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="886" bodyend="886"/>
        <referencedby refid="class_splines_1_1_spline2_d_1aca11e9614a3ab4ef5040e1270b58f625" compoundref="_splines2_d_8hxx" startline="55" endline="55">Splines::Spline2D::is_x_bounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a11cddae997421bc327d87ce71b62311d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_x_unbounded</definition>
        <argsstring>()</argsstring>
        <name>make_x_unbounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="887" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="887" bodyend="887"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a24e4a92cf42daed052f5dc320abe1fb3" compoundref="_splines2_d_8hxx" startline="56" endline="56">Splines::Spline2D::make_x_unbounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a49881b27fb55ce9715034695fddb6f11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_x_bounded</definition>
        <argsstring>()</argsstring>
        <name>make_x_bounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="888" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="888" bodyend="888"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a0bb6bc35c9878e12a2a235bc6f1ac056" compoundref="_splines2_d_8hxx" startline="57" endline="57">Splines::Spline2D::make_x_bounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a9ac734162f244915244f89f72dfced89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Splines::SplineSurf::is_y_bounded</definition>
        <argsstring>() const</argsstring>
        <name>is_y_bounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="890" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="890" bodyend="890"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a77d7e6ce1e765f3d398eef8df4cd2f50" compoundref="_splines2_d_8hxx" startline="59" endline="59">Splines::Spline2D::is_y_bounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a98fec3ba164a8cc6e193f5c28af87a53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_y_unbounded</definition>
        <argsstring>()</argsstring>
        <name>make_y_unbounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="891" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="891" bodyend="891"/>
        <referencedby refid="class_splines_1_1_spline2_d_1adf709164ec0774b1a37afbe2dce3e505" compoundref="_splines2_d_8hxx" startline="60" endline="60">Splines::Spline2D::make_y_unbounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a9539bc72a47a813ee4c10110b6bbd120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::make_y_bounded</definition>
        <argsstring>()</argsstring>
        <name>make_y_bounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="892" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="892" bodyend="892"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ab535f112e5b1b9bbc143443f4ba33e00" compoundref="_splines2_d_8hxx" startline="61" endline="61">Splines::Spline2D::make_y_bounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a608635cd50deed1fff36e7cd03b0c6ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string const  &amp;</type>
        <definition>string const&amp; Splines::SplineSurf::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="894" column="19" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="894" bodyend="894"/>
        <referencedby refid="class_splines_1_1_spline_surf_1a6ab464c5941d3b04659bbf068de64e76" compoundref="_splines_bivariate_8cc" startline="41" endline="45">info</referencedby>
        <referencedby refid="class_splines_1_1_spline2_d_1a1d952012782cb5af0fe93c4e02fa510b" compoundref="_splines2_d_8hxx" startline="63" endline="63">Splines::Spline2D::name</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a94618b6ce21fedc6b756bfbd5cfc0fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Cancel the support points, empty the spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="897" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="50" bodyend="57"/>
        <referencedby refid="class_splines_1_1_spline2_d_1abc9e4215b9fc86c64433dbb16873ddd0" compoundref="_splines2_d_8hxx" startline="66" endline="66">Splines::Spline2D::clear</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a53b6ab80b72fc6d25c428d523167a13f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::numPointX</definition>
        <argsstring>() const</argsstring>
        <name>numPointX</name>
        <briefdescription>
<para>return the number of support points of the spline along x direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="900" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="900" bodyend="900"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a6bbe7afcd7817db6e455b4ab0101f563" compoundref="_splines2_d_8hxx" startline="70" endline="70">Splines::Spline2D::numPointX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a65211a03a1b6fe553a76a0c451d39a0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSurf::numPointY</definition>
        <argsstring>() const</argsstring>
        <name>numPointY</name>
        <briefdescription>
<para>return the number of support points of the spline along y direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="903" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="903" bodyend="903"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a17ae868e02912c9968f9e2328e72b7ac" compoundref="_splines2_d_8hxx" startline="74" endline="74">Splines::Spline2D::numPointY</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a1b92b8c9226636ebdba3b8c24a45908f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::xNode</definition>
        <argsstring>(integer i) const</argsstring>
        <name>xNode</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>return the i-th node of the spline (x component). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="906" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="906" bodyend="906"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a6b7551e9e4f199a5ef5b4806920578a0" compoundref="_splines2_d_8hxx" startline="78" endline="78">Splines::Spline2D::xNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1aff12798d37407db141aba1435ed2fd9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::yNode</definition>
        <argsstring>(integer i) const</argsstring>
        <name>yNode</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>return the i-th node of the spline (y component). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="909" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="909" bodyend="909"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a0a1cad4e52cfd0aaa8cb1e040a2b8c61" compoundref="_splines2_d_8hxx" startline="82" endline="82">Splines::Spline2D::yNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a607401ca161c26675be92507d4e29d97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::zNode</definition>
        <argsstring>(integer i, integer j) const</argsstring>
        <name>zNode</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>return the i-th node of the spline (y component). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="913" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="913" bodyend="914"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a61d2028cb523d72d2df7569fd8d1f5be" compoundref="_splines2_d_8hxx" startline="86" endline="86">Splines::Spline2D::zNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a6fc403cb0c7c0937d1b478415625beee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <briefdescription>
<para>return x-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="917" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="917" bodyend="917"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ac3120131263cb398593484c8d674bac3" compoundref="_splines2_d_8hxx" startline="90" endline="90">Splines::Spline2D::xMin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4fd0b17f1a8cf3f67d5a217ce6808ce2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <briefdescription>
<para>return x-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="920" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="920" bodyend="920"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a3e3aac8a010976882be5eee9484e6e77" compoundref="_splines2_d_8hxx" startline="94" endline="94">Splines::Spline2D::xMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ab25c1789119fdf8620fd3fb34ca1ff89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::yMin</definition>
        <argsstring>() const</argsstring>
        <name>yMin</name>
        <briefdescription>
<para>return y-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="923" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="923" bodyend="923"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a75a3bf3d11b08ce351a1eb1b66d1c6c8" compoundref="_splines2_d_8hxx" startline="98" endline="98">Splines::Spline2D::yMin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ac9c67e81e44c777cc39cbcf6cc6cc022" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::yMax</definition>
        <argsstring>() const</argsstring>
        <name>yMax</name>
        <briefdescription>
<para>return y-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="926" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="926" bodyend="926"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ae31a17675487995a68ed21185bc3a342" compoundref="_splines2_d_8hxx" startline="102" endline="102">Splines::Spline2D::yMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4bb3cf3a8e18a1415b6cce42c7ae5878" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::zMin</definition>
        <argsstring>() const</argsstring>
        <name>zMin</name>
        <briefdescription>
<para>return z-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="929" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="929" bodyend="929"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ac6c66219f95a4565afab2f77d8b3d482" compoundref="_splines2_d_8hxx" startline="106" endline="106">Splines::Spline2D::zMin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a494a7c2eba6eb7c56894a5e53004fef4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::zMax</definition>
        <argsstring>() const</argsstring>
        <name>zMax</name>
        <briefdescription>
<para>return z-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="932" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="932" bodyend="932"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a27292b81ce58cba6a284d8b62cc526a6" compoundref="_splines2_d_8hxx" startline="110" endline="110">Splines::Spline2D::zMax</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a4595a05c9d53b5bbc63f80a3fc6d49ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::build</definition>
        <argsstring>(real_type const *x, integer incx, real_type const *y, integer incy, real_type const *z, integer ldZ, integer nx, integer ny, bool fortran_storage=false, bool transposed=false)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incx</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const *</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ldZ</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ny</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fortran_storage</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build surface spline <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of x-coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>incx</parametername>
</parameternamelist>
<parameterdescription>
<para>access elements as x[0], x[incx], x[2*incx],... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of y-coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>incy</parametername>
</parameternamelist>
<parameterdescription>
<para>access elements as y[0], y[incy], x[2*incy],... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix of z-values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldZ</parametername>
</parameternamelist>
<parameterdescription>
<para>leading dimension of the matrix. Elements are stored by row Z(i,j) = z[i*ldZ+j] as C-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points in direction x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points in direction y </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fortran_storage</parametername>
</parameternamelist>
<parameterdescription>
<para>if true elements are stored by column i.e. Z(i,j) = z[i+j*ldZ] as Fortran-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposed</parametername>
</parameternamelist>
<parameterdescription>
<para>if true matrix Z is stored transposed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="950" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="62" bodyend="99"/>
        <referencedby refid="class_splines_1_1_spline_surf_1ae974861690c40828c831304cee663f34" compoundref="_splines_8hh" startline="969" endline="985">build</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1a996d1cb82341dbd2c3241891cf206cee" compoundref="_splines_bivariate_8cc" startline="459" endline="582">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ae974861690c40828c831304cee663f34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::build</definition>
        <argsstring>(vector&lt; real_type &gt; const &amp;x, vector&lt; real_type &gt; const &amp;y, vector&lt; real_type &gt; const &amp;z, bool fortran_storage=false, bool transposed=false)</argsstring>
        <name>build</name>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; const &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fortran_storage</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build surface spline <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of x-coordinates, nx = x.size() </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of y-coordinates, ny = y.size() </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix of z-values. Elements are stored by row Z(i,j) = z[i*ny+j] as C-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fortran_storage</parametername>
</parameternamelist>
<parameterdescription>
<para>if true elements are stored by column i.e. Z(i,j) = z[i+j*nx] as Fortran-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposed</parametername>
</parameternamelist>
<parameterdescription>
<para>if true matrix Z is stored transposed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="969" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="969" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a954fb9fca4befdfde163b296245620ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::build</definition>
        <argsstring>(real_type const *z, integer ldZ, integer nx, integer ny, bool fortran_storage=false, bool transposed=false)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const *</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ldZ</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ny</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fortran_storage</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build surface spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix of z-values. Elements are stored by row Z(i,j) = z[i*ny+j] as C-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldZ</parametername>
</parameternamelist>
<parameterdescription>
<para>leading dimension of the matrix. Elements are stored by row Z(i,j) = z[i*ldZ+j] as C-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>x-dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>y-dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fortran_storage</parametername>
</parameternamelist>
<parameterdescription>
<para>if true elements are stored by column i.e. Z(i,j) = z[i+j*nx] as Fortran-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposed</parametername>
</parameternamelist>
<parameterdescription>
<para>if true matrix Z is stored transposed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1001" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="104" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1abc87c149c4634de7bc5f1419b4db312f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::build</definition>
        <argsstring>(vector&lt; real_type &gt; const &amp;z, integer nx, integer ny, bool fortran_storage=false, bool transposed=false)</argsstring>
        <name>build</name>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; const &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>ny</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fortran_storage</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build surface spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix of z-values. Elements are stored by row Z(i,j) = z[i*ny+j] as C-matrix. ldZ leading dimension of the matrix is ny for C-storage and nx for Fortran storage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>x-dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>y-dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fortran_storage</parametername>
</parameternamelist>
<parameterdescription>
<para>if true elements are stored by column i.e. Z(i,j) = z[i+j*nx] as Fortran-matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposed</parametername>
</parameternamelist>
<parameterdescription>
<para>if true matrix Z is stored transposed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1024" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1024" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a996d1cb82341dbd2c3241891cf206cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::setup</definition>
        <argsstring>(GenericContainer const &amp;gc)</argsstring>
        <name>setup</name>
        <param>
          <type>GenericContainer const &amp;</type>
          <declname>gc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1038" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="459" bodyend="582"/>
        <referencedby refid="class_splines_1_1_spline_surf_1a1314979c6c3e6edeb95f8456a15ac751" compoundref="_splines_8hh" startline="1041" endline="1042">build</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a1314979c6c3e6edeb95f8456a15ac751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::build</definition>
        <argsstring>(GenericContainer const &amp;gc)</argsstring>
        <name>build</name>
        <param>
          <type>GenericContainer const &amp;</type>
          <declname>gc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1041" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1041" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a1b9cdefed948aa0ca3bd418e3d23abe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::operator()</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a8539f6feb3eae6e5182abff14004ef6c">operator()</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a2e48bbbf807efc1c001b36460d20a16e">operator()</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a4b1980852f2e50913825fbc73c42856b">operator()</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Evaluate spline value at point <formula id="0">$ (x,y) $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1047" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a196bd4a53066cc4f9d0873b02d621936" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Splines::SplineSurf::D</definition>
        <argsstring>(real_type x, real_type y, real_type d[3]) const =0</argsstring>
        <name>D</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a3f628e746495875f6ce87da294a82d0e">D</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a34c14428f1559176b48a054a6dc9ff30">D</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a35b9d0e4c060a290cc5c462c944278d5">D</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>d</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>value and first derivatives at point <formula id="0">$ (x,y) $</formula><itemizedlist>
<listitem><para>d[0] value of the spline <formula id="1">$ S(x,y) $</formula></para>
</listitem><listitem><para>d[1] derivative respect to <formula id="2">$ x $</formula> of the spline: <formula id="3">$ S_x(x,y) $</formula></para>
</listitem><listitem><para>d[2] derivative respect to <formula id="4">$ y $</formula> of the spline: <formula id="5">$ S_y(x,y) $</formula> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1057" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1afc1b939cda6d693fa3036a1c99a9b8ff" compoundref="_splines2_d_8hxx" startline="209" endline="210">Splines::Spline2D::D</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a0e7720a163600987a3bee8e8bb64931e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::Dx</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>Dx</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a666596d391d195206c8325ae6d46b803">Dx</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a3913a0f015090cc0fca45126baea091b">Dx</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a259de027e1d9a118a75bc58d82ff30ed">Dx</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>first derivatives respect to <formula id="2">$ x $</formula> at point <formula id="0">$ (x,y) $</formula> of the spline: <formula id="3">$ S_x(x,y) $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1064" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a450076a23a819660eefc50e80a1b3858" compoundref="_splines2_d_8hxx" startline="213" endline="214">Splines::Spline2D::Dx</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1a800ffafcc3e4346f4b8546a22e5d6679" compoundref="_splines_8hh" startline="1114" endline="1115">eval_D_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ab572f7f3fb26c76c53bd8eb3a86e4fe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::Dy</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>Dy</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1aa19778cda90ab86a83e55e7d37ca8f4c">Dy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1ab413b8f3232498b14750af1e605f956c">Dy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a2091f0ba7f356e368a33dc5f83818389">Dy</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>first derivatives respect to <formula id="4">$ y $</formula> at point <formula id="0">$ (x,y) $</formula> of the spline: <formula id="5">$ S_y(x,y) $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1071" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a6b895a0af8c0ab4c3e07682cea0d856a" compoundref="_splines2_d_8hxx" startline="217" endline="218">Splines::Spline2D::Dy</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1a9a7c2af036adf74fc1b70ba0acbd55c3" compoundref="_splines_8hh" startline="1119" endline="1120">eval_D_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a9b62e4529f9324b2e739ccae440baa6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Splines::SplineSurf::DD</definition>
        <argsstring>(real_type x, real_type y, real_type dd[6]) const =0</argsstring>
        <name>DD</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a681e231dc76125341f53d57580d341f7">DD</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a86755a8d8222753f7dd07b6bde27c9a2">DD</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a1b384fb6815a15a279d510ccd581ab4a">DD</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>dd</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>value, first and second derivatives at point <formula id="0">$ (x,y) $</formula><itemizedlist>
<listitem><para>d[0] value of the spline <formula id="1">$ S(x,y) $</formula></para>
</listitem><listitem><para>d[1] derivative respect to <formula id="2">$ x $</formula> of the spline: <formula id="3">$ S_x(x,y) $</formula></para>
</listitem><listitem><para>d[2] derivative respect to <formula id="4">$ y $</formula> of the spline: <formula id="5">$ S_y(x,y) $</formula></para>
</listitem><listitem><para>d[3] second derivative respect to <formula id="2">$ x $</formula> of the spline: <formula id="6">$ S_{xx}(x,y) $</formula></para>
</listitem><listitem><para>d[4] mixed second derivative: <formula id="7">$ S_{xy}(x,y) $</formula></para>
</listitem><listitem><para>d[5] second derivative respect to <formula id="4">$ y $</formula> of the spline: <formula id="8">$ S_{yy}(x,y) $</formula> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1084" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1afa991a844100404a7a0b3a126ee7fd3a" compoundref="_splines2_d_8hxx" startline="222" endline="223">Splines::Spline2D::DD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1aeeb02c6c7036489bfe72d41ffb8ec5ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::Dxx</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>Dxx</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a397f8baf3815ea18f9eedf097ce23436">Dxx</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1a4c1db5d3d64dbf68a578a6d1833c2874">Dxx</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a2f4bb738352afe47c10535191ccab1b8">Dxx</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>second derivatives respect to <formula id="2">$ x $</formula> at point <formula id="0">$ (x,y) $</formula> of the spline: <formula id="6">$ S_{xx}(x,y) $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1091" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1af9dabc8345af8775da915b90e13591f4" compoundref="_splines2_d_8hxx" startline="226" endline="227">Splines::Spline2D::Dxx</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1ad43d5a3cdccb4ff5b255a73be6db6854" compoundref="_splines_8hh" startline="1124" endline="1125">eval_D_1_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a351cab30da2db2317de984522778f3bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::Dxy</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>Dxy</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a1c5f359cc0d6a60fc85ca705d5a05b52">Dxy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1ae64f55cd54ed335f7dd35e85c95636ec">Dxy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a83da6fdb0735721d889718ddb41a5311">Dxy</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mixed second derivatives: <formula id="7">$ S_{xy}(x,y) $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1098" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a37b2eb017b75756c88cb5f689408dcee" compoundref="_splines2_d_8hxx" startline="230" endline="231">Splines::Spline2D::Dxy</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1ac1099ec3d4bab518df5057011edee20f" compoundref="_splines_8hh" startline="1129" endline="1130">eval_D_1_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a38d078ec965c0d672869182b3dae8095" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>virtual real_type Splines::SplineSurf::Dyy</definition>
        <argsstring>(real_type x, real_type y) const =0</argsstring>
        <name>Dyy</name>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_base_1a527e5ff39af97b6b0345d4d378f59591">Dyy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_base_1ac844f40e57eba04cb9f8323053a411d9">Dyy</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1aef7209840e38924b56fd92df4bf881d0">Dyy</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>second derivatives respect to <formula id="4">$ y $</formula> at point <formula id="0">$ (x,y) $</formula> of the spline: <formula id="8">$ S_{yy}(x,y) $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1105" column="5"/>
        <referencedby refid="class_splines_1_1_spline2_d_1aff8c908a8631a0e71485fc9ade3270c0" compoundref="_splines2_d_8hxx" startline="234" endline="235">Splines::Spline2D::Dyy</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1a6a556461454a1dbd3c803421e245dc24" compoundref="_splines_8hh" startline="1134" endline="1135">eval_D_2_2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1aaececf8cc46a4182897d0ec2fca516be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Evaluate spline value at point <formula id="0">$ (x,y) $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1109" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1109" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a800ffafcc3e4346f4b8546a22e5d6679" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval_D_1</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval_D_1</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Alias for <computeroutput>Dx(x,y)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1114" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1114" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a9a7c2af036adf74fc1b70ba0acbd55c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval_D_2</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval_D_2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Alias for <computeroutput>Dy(x,y)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1119" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1119" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ad43d5a3cdccb4ff5b255a73be6db6854" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval_D_1_1</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval_D_1_1</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Alias for <computeroutput>Dxx(x,y)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1124" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1124" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ac1099ec3d4bab518df5057011edee20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval_D_1_2</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval_D_1_2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Alias for <computeroutput>Dxy(x,y)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1129" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1129" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a6a556461454a1dbd3c803421e245dc24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSurf::eval_D_2_2</definition>
        <argsstring>(real_type x, real_type y) const</argsstring>
        <name>eval_D_2_2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Alias for <computeroutput>Dyy(x,y)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1134" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1134" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a3563e238101df5ff2bdc83cfd4c6d605" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Splines::SplineSurf::writeToStream</definition>
        <argsstring>(ostream_type &amp;s) const =0</argsstring>
        <name>writeToStream</name>
        <reimplementedby refid="class_splines_1_1_akima2_dspline_1aae2440c1be204c2697da64597ca0aba8">writeToStream</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_1a971631f1fb898c596e607a2ae6875aa9">writeToStream</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1aa48800ad2b31a3f906357fe741c549da">writeToStream</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_1a30edea36289d49007c87e08d792efb61">writeToStream</reimplementedby>
        <param>
          <type><ref refid="namespace_splines_1a943d4ae4896c10228d57d004bd991e7f" kindref="member">ostream_type</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Print spline coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1138" column="18"/>
        <referencedby refid="class_splines_1_1_spline2_d_1a6a18c3d75c3df54267aae62a28c41ecb" compoundref="_splines2_d_8hxx" startline="266" endline="267">Splines::Spline2D::writeToStream</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ad62c9a89edef93615b3d36c20fd54ae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>char const  *</type>
        <definition>virtual char const* Splines::SplineSurf::type_name</definition>
        <argsstring>() const =0</argsstring>
        <name>type_name</name>
        <reimplementedby refid="class_splines_1_1_akima2_dspline_1a3e05ba2f2c666bd47baf2c39e287cd78">type_name</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_cubic_spline_1a9fcfef22671c0aa8cb0d6df733090618">type_name</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bilinear_spline_1a90f6f0a424b919d48356937edcb74973">type_name</reimplementedby>
        <reimplementedby refid="class_splines_1_1_bi_quintic_spline_1a755e0aae0802a6a5b7c01a51514dbfc8">type_name</reimplementedby>
        <briefdescription>
<para>Return spline typename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1141" column="25"/>
        <referencedby refid="class_splines_1_1_spline_surf_1a6ab464c5941d3b04659bbf068de64e76" compoundref="_splines_bivariate_8cc" startline="41" endline="45">info</referencedby>
        <referencedby refid="class_splines_1_1_spline2_d_1a8f59f233545a36b17e5472851f26fd34" compoundref="_splines2_d_8hxx" startline="270" endline="270">Splines::Spline2D::type_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1a6ab464c5941d3b04659bbf068de64e76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string Splines::SplineSurf::info</definition>
        <argsstring>() const</argsstring>
        <name>info</name>
        <briefdescription>
<para>return a string with information about the spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1144" column="20" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplinesBivariate.cc" bodystart="41" bodyend="45"/>
        <referencedby refid="class_splines_1_1_spline2_d_1ad3431e98de1b460ee5411f867356d059" compoundref="_splines2_d_8hxx" startline="273" endline="274">Splines::Spline2D::info</referencedby>
        <referencedby refid="class_splines_1_1_spline_surf_1ab19f23d40ac2a4c352b9f9e78b39a200" compoundref="_splines_8hh" startline="1148" endline="1149">info</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_surf_1ab19f23d40ac2a4c352b9f9e78b39a200" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSurf::info</definition>
        <argsstring>(ostream_type &amp;stream) const</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="namespace_splines_1a943d4ae4896c10228d57d004bd991e7f" kindref="member">ostream_type</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>write a string with information about the spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="1148" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="1148" bodyend="1149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_splines_1_1_spline" kindref="compound">Spline</ref> Management Class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>Splines::BiQuinticSpline</label>
        <link refid="class_splines_1_1_bi_quintic_spline"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Splines::BiCubicSplineBase</label>
        <link refid="class_splines_1_1_bi_cubic_spline_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Splines::BiCubicSpline</label>
        <link refid="class_splines_1_1_bi_cubic_spline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Splines::Akima2Dspline</label>
        <link refid="class_splines_1_1_akima2_dspline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Splines::BilinearSpline</label>
        <link refid="class_splines_1_1_bilinear_spline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Splines::BiQuinticSplineBase</label>
        <link refid="class_splines_1_1_bi_quintic_spline_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Splines::SplineSurf</label>
        <link refid="class_splines_1_1_spline_surf"/>
      </node>
    </inheritancegraph>
    <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" line="801" column="3" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/Splines.hh" bodystart="801" bodyend="1151"/>
    <listofallmembers>
      <member refid="class_splines_1_1_spline_surf_1a4595a05c9d53b5bbc63f80a3fc6d49ad" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_surf_1ae974861690c40828c831304cee663f34" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_surf_1a954fb9fca4befdfde163b296245620ea" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_surf_1abc87c149c4634de7bc5f1419b4db312f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_surf_1a1314979c6c3e6edeb95f8456a15ac751" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_surf_1a94618b6ce21fedc6b756bfbd5cfc0fb4" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>clear</name></member>
      <member refid="class_splines_1_1_spline_surf_1a196bd4a53066cc4f9d0873b02d621936" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>D</name></member>
      <member refid="class_splines_1_1_spline_surf_1a9b62e4529f9324b2e739ccae440baa6c" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>DD</name></member>
      <member refid="class_splines_1_1_spline_surf_1a0e7720a163600987a3bee8e8bb64931e" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>Dx</name></member>
      <member refid="class_splines_1_1_spline_surf_1aeeb02c6c7036489bfe72d41ffb8ec5ed" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>Dxx</name></member>
      <member refid="class_splines_1_1_spline_surf_1a351cab30da2db2317de984522778f3bb" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>Dxy</name></member>
      <member refid="class_splines_1_1_spline_surf_1ab572f7f3fb26c76c53bd8eb3a86e4fe9" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>Dy</name></member>
      <member refid="class_splines_1_1_spline_surf_1a38d078ec965c0d672869182b3dae8095" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>Dyy</name></member>
      <member refid="class_splines_1_1_spline_surf_1aaececf8cc46a4182897d0ec2fca516be" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_surf_1a800ffafcc3e4346f4b8546a22e5d6679" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval_D_1</name></member>
      <member refid="class_splines_1_1_spline_surf_1ad43d5a3cdccb4ff5b255a73be6db6854" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval_D_1_1</name></member>
      <member refid="class_splines_1_1_spline_surf_1ac1099ec3d4bab518df5057011edee20f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval_D_1_2</name></member>
      <member refid="class_splines_1_1_spline_surf_1a9a7c2af036adf74fc1b70ba0acbd55c3" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval_D_2</name></member>
      <member refid="class_splines_1_1_spline_surf_1a6a556461454a1dbd3c803421e245dc24" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>eval_D_2_2</name></member>
      <member refid="class_splines_1_1_spline_surf_1a6ab464c5941d3b04659bbf068de64e76" prot="public" virt="virtual"><scope>Splines::SplineSurf</scope><name>info</name></member>
      <member refid="class_splines_1_1_spline_surf_1ab19f23d40ac2a4c352b9f9e78b39a200" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>info</name></member>
      <member refid="class_splines_1_1_spline_surf_1a2abdacfa040c56cfce1a3a36c6bc3bcb" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>initLastInterval_x</name></member>
      <member refid="class_splines_1_1_spline_surf_1a50798b7830d42cd4786f50d754a040c2" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>initLastInterval_y</name></member>
      <member refid="class_splines_1_1_spline_surf_1ac1222ace02fbb349788f6f10b4be72e5" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>ipos_C</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4949e07a4199f7828df281745fd3eee8" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>ipos_C</name></member>
      <member refid="class_splines_1_1_spline_surf_1ac6832695c61c3a03a57512c2c7e30bae" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>ipos_F</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4db57d1a55b21307056bcc85fb0643db" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>ipos_F</name></member>
      <member refid="class_splines_1_1_spline_surf_1af973208e1cb61064310b805c94373fdf" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>is_x_bounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1ae81c57bd20e9a56f6ec34ab179e0a77e" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>is_x_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1a9ac734162f244915244f89f72dfced89" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>is_y_bounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4b41e49135b384f4a7d61691bf697121" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>is_y_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1a50bb24750a8130aeb2e51c0895150279" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_bs_x</name></member>
      <member refid="class_splines_1_1_spline_surf_1a390e5de8a5983495e7e9e9a806bf56c1" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_bs_y</name></member>
      <member refid="class_splines_1_1_spline_surf_1a12deccd2edadc07e574612b0bd1c14cb" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_mem</name></member>
      <member refid="class_splines_1_1_spline_surf_1a7dd53d3e07186af9ae150729aad96f63" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_name</name></member>
      <member refid="class_splines_1_1_spline_surf_1a2fb6b40e7e292e0ddee2edd1501b5153" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_nx</name></member>
      <member refid="class_splines_1_1_spline_surf_1a24206eb148d1265f4d0dfe1214fe4cf9" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_ny</name></member>
      <member refid="class_splines_1_1_spline_surf_1a629230f38c333aaff7b49622c07f4c85" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_X</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4e9f9cd043d1dbc411a26541dff65b85" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_x_can_extend</name></member>
      <member refid="class_splines_1_1_spline_surf_1a6045607f74b5859258ba2429555e3870" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_x_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4053092e6d717cb951242d343155b56a" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_Y</name></member>
      <member refid="class_splines_1_1_spline_surf_1abf321b0864f8b46cb72f4eb2e091b23f" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_y_can_extend</name></member>
      <member refid="class_splines_1_1_spline_surf_1a8ef93eb714f9b2c45b91f33f1ab82bba" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_y_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1a1504e9f87a2e44645b492df3b0f734dd" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_Z</name></member>
      <member refid="class_splines_1_1_spline_surf_1a53b4966292fd7cd9a36c1e2eec947055" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_Z_max</name></member>
      <member refid="class_splines_1_1_spline_surf_1af4d745c5b7aef5d0450ae44b4e4eb427" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>m_Z_min</name></member>
      <member refid="class_splines_1_1_spline_surf_1a49881b27fb55ce9715034695fddb6f11" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_x_bounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1aadb608b2bee5ac6d90972381db7fc474" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_x_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1abb54ecfeafaac4593d1b0c3788761b7f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_x_opened</name></member>
      <member refid="class_splines_1_1_spline_surf_1a11cddae997421bc327d87ce71b62311d" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_x_unbounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1a9539bc72a47a813ee4c10110b6bbd120" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_y_bounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1aab6a52592ebe995f675fc2a7f53c52f0" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_y_closed</name></member>
      <member refid="class_splines_1_1_spline_surf_1af537a09f1f219b07544f016c925206f2" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_y_opened</name></member>
      <member refid="class_splines_1_1_spline_surf_1a98fec3ba164a8cc6e193f5c28af87a53" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>make_y_unbounded</name></member>
      <member refid="class_splines_1_1_spline_surf_1ab5b42703165828af1de9adb0a50e290a" prot="private" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>makeSpline</name></member>
      <member refid="class_splines_1_1_spline_surf_1a608635cd50deed1fff36e7cd03b0c6ec" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>name</name></member>
      <member refid="class_splines_1_1_spline_surf_1a53b6ab80b72fc6d25c428d523167a13f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>numPointX</name></member>
      <member refid="class_splines_1_1_spline_surf_1a65211a03a1b6fe553a76a0c451d39a0e" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>numPointY</name></member>
      <member refid="class_splines_1_1_spline_surf_1a1b9cdefed948aa0ca3bd418e3d23abe4" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>operator()</name></member>
      <member refid="class_splines_1_1_spline_surf_1a171a17afcb0d1ea9c6e9817689ea0f1d" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>operator=</name></member>
      <member refid="class_splines_1_1_spline_surf_1a12ec69b4415b2d83c6e1508fdd2f82fe" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>search_x</name></member>
      <member refid="class_splines_1_1_spline_surf_1ab4777d76c7657ebfb1f247e567bdf5b3" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>search_y</name></member>
      <member refid="class_splines_1_1_spline_surf_1a996d1cb82341dbd2c3241891cf206cee" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>setup</name></member>
      <member refid="class_splines_1_1_spline_surf_1a41eab4de4cdba86394780625d9a0ea9f" prot="private" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>SplineSurf</name></member>
      <member refid="class_splines_1_1_spline_surf_1a0ce41641732a5ecc623ca8bd342e637f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>SplineSurf</name></member>
      <member refid="class_splines_1_1_spline_surf_1ad62c9a89edef93615b3d36c20fd54ae4" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>type_name</name></member>
      <member refid="class_splines_1_1_spline_surf_1a3563e238101df5ff2bdc83cfd4c6d605" prot="public" virt="pure-virtual"><scope>Splines::SplineSurf</scope><name>writeToStream</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4fd0b17f1a8cf3f67d5a217ce6808ce2" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>xMax</name></member>
      <member refid="class_splines_1_1_spline_surf_1a6fc403cb0c7c0937d1b478415625beee" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>xMin</name></member>
      <member refid="class_splines_1_1_spline_surf_1a1b92b8c9226636ebdba3b8c24a45908f" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>xNode</name></member>
      <member refid="class_splines_1_1_spline_surf_1ac9c67e81e44c777cc39cbcf6cc6cc022" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>yMax</name></member>
      <member refid="class_splines_1_1_spline_surf_1ab25c1789119fdf8620fd3fb34ca1ff89" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>yMin</name></member>
      <member refid="class_splines_1_1_spline_surf_1aff12798d37407db141aba1435ed2fd9a" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>yNode</name></member>
      <member refid="class_splines_1_1_spline_surf_1a494a7c2eba6eb7c56894a5e53004fef4" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>zMax</name></member>
      <member refid="class_splines_1_1_spline_surf_1a4bb3cf3a8e18a1415b6cce42c7ae5878" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>zMin</name></member>
      <member refid="class_splines_1_1_spline_surf_1a607401ca161c26675be92507d4e29d97" prot="public" virt="non-virtual"><scope>Splines::SplineSurf</scope><name>zNode</name></member>
      <member refid="class_splines_1_1_spline_surf_1a8c3e6c8be68c1d8cf8f36e8e5f39b924" prot="public" virt="virtual"><scope>Splines::SplineSurf</scope><name>~SplineSurf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
