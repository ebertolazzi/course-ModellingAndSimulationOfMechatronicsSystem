<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_splines_1_1_spline_set" kind="class" language="C++" prot="public">
    <compoundname>Splines::SplineSet</compoundname>
    <includes refid="_spline_set_8hxx" local="no">SplineSet.hxx</includes>
    <innerclass refid="class_splines_1_1_spline_set_1_1_binary_search" prot="private">Splines::SplineSet::BinarySearch</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a0b79a52c5dcaa6869e69530b85836b4f" prot="private" static="no" mutable="no">
        <type>string const</type>
        <definition>string const Splines::SplineSet::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="59" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1ad9e17fac296396621ecb06ed6b7ea5df" prot="private" static="no" mutable="no">
        <type>Utils::Malloc&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt;</type>
        <definition>Utils::Malloc&lt;real_type&gt; Splines::SplineSet::m_baseValue</definition>
        <argsstring></argsstring>
        <name>m_baseValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="61" column="20" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a4362122dd58e3fb7a8fcf18a21f749da" prot="private" static="no" mutable="no">
        <type>Utils::Malloc&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> * &gt;</type>
        <definition>Utils::Malloc&lt;real_type*&gt; Splines::SplineSet::m_basePointer</definition>
        <argsstring></argsstring>
        <name>m_basePointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="62" column="19" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1aa2ec18d578e49f4627b7630ce858245a" prot="private" static="no" mutable="no">
        <type>Utils::Malloc&lt; void * &gt;</type>
        <definition>Utils::Malloc&lt;void*&gt; Splines::SplineSet::m_baseSplines</definition>
        <argsstring></argsstring>
        <name>m_baseSplines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="63" column="24" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1aea09e45608def745cf0380ed188bace5" prot="private" static="no" mutable="no">
        <type>Utils::Malloc&lt; int &gt;</type>
        <definition>Utils::Malloc&lt;int&gt; Splines::SplineSet::m_baseInt</definition>
        <argsstring></argsstring>
        <name>m_baseInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="64" column="26" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a1e756404f394827b86aa78bceea9cfba" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSet::m_npts</definition>
        <argsstring></argsstring>
        <name>m_npts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="66" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a16e44df15805e29ca91573c3ae5ea7c7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSet::m_nspl</definition>
        <argsstring></argsstring>
        <name>m_nspl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="67" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1afcd78b3ecadb6a0c74b333a085ff4eb9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSet::m_X</definition>
        <argsstring></argsstring>
        <name>m_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="69" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a8eb4488ed3026ffb7940a9baf2c14ffe" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> **</type>
        <definition>real_type** Splines::SplineSet::m_Y</definition>
        <argsstring></argsstring>
        <name>m_Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="70" column="16" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a7341d56f12f811fdc6916db91be03fc1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> **</type>
        <definition>real_type** Splines::SplineSet::m_Yp</definition>
        <argsstring></argsstring>
        <name>m_Yp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="71" column="16" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a7c8709bfcc938b7d2ba260d408d8e8d1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> **</type>
        <definition>real_type** Splines::SplineSet::m_Ypp</definition>
        <argsstring></argsstring>
        <name>m_Ypp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="72" column="16" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1ad6e2901de37c9947ee83d8673fbd8c45" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSet::m_Ymin</definition>
        <argsstring></argsstring>
        <name>m_Ymin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="73" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a2f476904148900dd2c665824f9a15803" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *</type>
        <definition>real_type* Splines::SplineSet::m_Ymax</definition>
        <argsstring></argsstring>
        <name>m_Ymax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="74" column="17" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a97ca287f283b8c75f508d5dd5bcc61ce" prot="private" static="no" mutable="no">
        <type><ref refid="class_splines_1_1_spline" kindref="compound">Spline</ref> **</type>
        <definition>Spline** Splines::SplineSet::m_splines</definition>
        <argsstring></argsstring>
        <name>m_splines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="76" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a4410f332f3396390e0a3eebe38185e2f" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Splines::SplineSet::m_is_monotone</definition>
        <argsstring></argsstring>
        <name>m_is_monotone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="77" column="14" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splines_1_1_spline_set_1a21bf732b09844a030a0a30563a765f97" prot="private" static="no" mutable="no">
        <type>BinarySearch</type>
        <definition>BinarySearch Splines::SplineSet::m_header_to_position</definition>
        <argsstring></argsstring>
        <name>m_header_to_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="79" column="18" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a7c10427c73686b27f04efe8eadf7731c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splines::SplineSet::SplineSet</definition>
        <argsstring>(SplineSet const &amp;)=delete</argsstring>
        <name>SplineSet</name>
        <param>
          <type><ref refid="class_splines_1_1_spline_set" kindref="compound">SplineSet</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1cc5e4842d49b7ce009caff7ef08fcab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splines_1_1_spline_set" kindref="compound">SplineSet</ref> const  &amp;</type>
        <definition>SplineSet const&amp; Splines::SplineSet::operator=</definition>
        <argsstring>(SplineSet const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_splines_1_1_spline_set" kindref="compound">SplineSet</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="35" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a2d96a3bee36753e13850063ce136d0b0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splines_1_1_spline" kindref="compound">Spline</ref> const  *</type>
        <definition>Spline const  * Splines::SplineSet::intersect</definition>
        <argsstring>(integer spl, real_type zeta, real_type &amp;x) const</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>| find <computeroutput>x</computeroutput> value such that the monotone spline | <computeroutput>(spline[spl])(x)</computeroutput> intersect the value <computeroutput>zeta</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="88" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="501" bodyend="572"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a2c4d2a0f5db6b384c24100d8a5f385e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splines::SplineSet::SplineSet</definition>
        <argsstring>(string const &amp;name=&quot;SplineSet&quot;)</argsstring>
        <name>SplineSet</name>
        <param>
          <type>string const &amp;</type>
          <declname>name</declname>
          <defval>&quot;SplineSet&quot;</defval>
        </param>
        <briefdescription>
<para>spline constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="93" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="81" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3b0b43aa1f1e099b4070db20886f5caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Splines::SplineSet::~SplineSet</definition>
        <argsstring>()</argsstring>
        <name>~SplineSet</name>
        <briefdescription>
<para>spline destructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="97" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a4e09e3499d49a5665a5f053564d8833f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string const  &amp;</type>
        <definition>string const&amp; Splines::SplineSet::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="99" column="19" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="99" bodyend="99"/>
        <referencedby refid="class_splines_1_1_spline_set_1ab31367aa52124ceebe1f5c7836e4e853" compoundref="_spline_set_8cc" startline="109" endline="130">info</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a36b4252e0875da5d9edb5555a6e3483b" compoundref="_spline_set_8cc" startline="145" endline="151">name_list</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aed8fe88ec9857d14a3c6cc1f234d3dd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string const  &amp;</type>
        <definition>string const&amp; Splines::SplineSet::header</definition>
        <argsstring>(integer i) const</argsstring>
        <name>header</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="102" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="102" bodyend="103"/>
        <referencedby refid="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" compoundref="_spline_set_8cc" startline="180" endline="195">dump_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a4db60e3d41727aeb9bc8ba012bb684d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::get_headers</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;names) const</argsstring>
        <name>get_headers</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>fill a vector of strings with the names of the splines </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="107" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a36b4252e0875da5d9edb5555a6e3483b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Splines::SplineSet::name_list</definition>
        <argsstring>() const</argsstring>
        <name>name_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="109" column="12" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="145" bodyend="151"/>
        <referencedby refid="class_splines_1_1_spline_set_1a9452e26f2c5f43c6a698e3fc4d50bd9a" compoundref="_spline_set_8cc" startline="200" endline="209">getPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3b987eb75ec2e97dd45a2a0d4aac7be9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Splines::SplineSet::isMonotone</definition>
        <argsstring>(integer i) const</argsstring>
        <name>isMonotone</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="113" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a36c5996f4200172f4c30df6ca36a6ef5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSet::numPoints</definition>
        <argsstring>() const</argsstring>
        <name>numPoints</name>
        <briefdescription>
<para>return the number of support points of the splines </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="117" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1abcb795539844a0cd8c54c2ac84aecc37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSet::numSplines</definition>
        <argsstring>() const</argsstring>
        <name>numSplines</name>
        <briefdescription>
<para>return the number splines in the spline set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="120" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a9452e26f2c5f43c6a698e3fc4d50bd9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
        <definition>integer Splines::SplineSet::getPosition</definition>
        <argsstring>(char const *hdr) const</argsstring>
        <name>getPosition</name>
        <param>
          <type>char const *</type>
          <declname>hdr</declname>
        </param>
        <briefdescription>
<para>return the column with header(i) == hdr, return -1 if not found </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="123" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="200" bodyend="209"/>
        <referencedby refid="class_splines_1_1_spline_set_1a69332e0f11b20ecb76bd3bbcd055f8e3" compoundref="_spline_set_8cc" startline="616" endline="624">eval2</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a1bf9fc35f84f538f32ec40bfcacd67f2" compoundref="_spline_set_8cc" startline="669" endline="677">eval2_D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a4e71a9ba44ea0c8c598fc592d49a787f" compoundref="_spline_set_8cc" startline="730" endline="738">eval2_DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1acaeceb9b2a737b6ea0f9ab3d6d19aafe" compoundref="_spline_set_8cc" startline="794" endline="802">eval2_DDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a9cce3de657c0ce33d5c459a8108b67c4" compoundref="_spline_set_8hxx" startline="172" endline="175">getSpline</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1ac3296741adea291f93e78e45f7080f24" compoundref="_spline_set_8hxx" startline="162" endline="165">yMax</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a24e41aec63ee242303b157da87ed11b3" compoundref="_spline_set_8hxx" startline="155" endline="158">yMin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8b746b8e267170815a6c5ca25527c84c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const  *</type>
        <definition>real_type const* Splines::SplineSet::xNodes</definition>
        <argsstring>() const</argsstring>
        <name>xNodes</name>
        <briefdescription>
<para>return the vector of values of x-nodes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="126" column="22" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3d951bab68e246f384c8f688f5a5cbf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const  *</type>
        <definition>real_type const  * Splines::SplineSet::yNodes</definition>
        <argsstring>(integer i) const</argsstring>
        <name>yNodes</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>return the vector of values of x-nodes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="129" column="22" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1adeca857e1b4b29081e53ab421f17694d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::xNode</definition>
        <argsstring>(integer npt) const</argsstring>
        <name>xNode</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>npt</declname>
        </param>
        <briefdescription>
<para>return the i-th node of the spline (x component). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="133" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="133" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1af7935d5efc121117822caec1ed21a930" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::yNode</definition>
        <argsstring>(integer npt, integer spl) const</argsstring>
        <name>yNode</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>npt</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>return the i-th node of the spline (y component). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="138" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="138" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a0a8c9b879b58f9b6bd39354009a1a087" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <briefdescription>
<para>return x-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="142" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="142" bodyend="142"/>
        <referencedby refid="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" compoundref="_spline_set_8cc" startline="180" endline="195">dump_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a4049fd437c9f61bd14e7fe9116c498f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <briefdescription>
<para>return x-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="145" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="145" bodyend="145"/>
        <referencedby refid="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" compoundref="_spline_set_8cc" startline="180" endline="195">dump_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a53405bf2844b89b272c63c326ed74b22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::yMin</definition>
        <argsstring>(integer spl) const</argsstring>
        <name>yMin</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>return y-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="148" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1afabab0a38303ba992e0f2bda009b7474" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::yMax</definition>
        <argsstring>(integer spl) const</argsstring>
        <name>yMax</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>return y-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="151" column="15" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a24e41aec63ee242303b157da87ed11b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::yMin</definition>
        <argsstring>(char const *spl) const</argsstring>
        <name>yMin</name>
        <param>
          <type>char const *</type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>return y-minumum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="155" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac3296741adea291f93e78e45f7080f24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::yMax</definition>
        <argsstring>(char const *spl) const</argsstring>
        <name>yMax</name>
        <param>
          <type>char const *</type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>return y-maximum spline value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="162" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8da96f04f23e2a3b19ae7e585031cff3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splines_1_1_spline" kindref="compound">Spline</ref> *</type>
        <definition>Spline * Splines::SplineSet::getSpline</definition>
        <argsstring>(integer i) const</argsstring>
        <name>getSpline</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return pointer to the <computeroutput>i</computeroutput>-th spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="168" column="13" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="168" bodyend="175"/>
        <referencedby refid="class_splines_1_1_spline_set_1ac3b19336658dfdfaa0518314cac2c0ae" compoundref="_spline_set_8hxx" startline="192" endline="195">D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a1d7c5057754649f9902ed7d46eeba624" compoundref="_spline_set_8hxx" startline="205" endline="208">DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a518c67d4b64e310f2d1334d96910d1b6" compoundref="_spline_set_8hxx" startline="218" endline="221">DDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1afba184a1323067937596e62908355b6f" compoundref="_spline_set_8hxx" startline="231" endline="234">DDDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a0f8aa34ab198a5755f81614e09bba366" compoundref="_spline_set_8hxx" startline="244" endline="247">DDDDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1ad4dc94e17e08b48aa9ab6a221775aea7" compoundref="_spline_set_8hxx" startline="185" endline="188">eval</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a8cfad48ac045f8db1272a06de67abe6a" compoundref="_spline_set_g_c_8cc" startline="399" endline="413">eval2</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1acc2de8e9ec4085f981d5ff1b65facf42" compoundref="_spline_set_g_c_8cc" startline="573" endline="587">eval2_D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a1418204d67a71448cef755045c015822" compoundref="_spline_set_g_c_8cc" startline="746" endline="760">eval2_DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1acfb1d968183b1df2d12e39d98c5590bc" compoundref="_spline_set_g_c_8cc" startline="923" endline="937">eval2_DDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1adcd4ccf768438db070ee0844ae2b5472" compoundref="_spline_set_8hxx" startline="198" endline="201">eval_D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1af47f7b8ac03f3db61c0bb37989dea75c" compoundref="_spline_set_8hxx" startline="211" endline="214">eval_DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a2796e38da32fa7f6b9c5cdfc8d0b8aca" compoundref="_spline_set_8hxx" startline="224" endline="227">eval_DDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a7b9bb6035b266fc8217492fac1f707ea" compoundref="_spline_set_8hxx" startline="237" endline="240">eval_DDDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1ac103681b1aae62c9e5d4ba098f270364" compoundref="_spline_set_8hxx" startline="250" endline="253">eval_DDDDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a6a5eee6ca84c57b6606ae80fd57ac1ea" compoundref="_spline_set_8hxx" startline="179" endline="182">operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a9cce3de657c0ce33d5c459a8108b67c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_splines_1_1_spline" kindref="compound">Spline</ref> *</type>
        <definition>Spline* Splines::SplineSet::getSpline</definition>
        <argsstring>(char const *hdr) const</argsstring>
        <name>getSpline</name>
        <param>
          <type>char const *</type>
          <declname>hdr</declname>
        </param>
        <briefdescription>
<para>Return pointer to the <computeroutput>i</computeroutput>-th spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="172" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a6a5eee6ca84c57b6606ae80fd57ac1ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::operator()</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>Evaluate spline value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="179" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ad4dc94e17e08b48aa9ab6a221775aea7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="185" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="185" bodyend="188"/>
        <referencedby refid="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" compoundref="_spline_set_8cc" startline="180" endline="195">dump_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac3b19336658dfdfaa0518314cac2c0ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::D</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>First derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="192" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="192" bodyend="195"/>
        <referencedby refid="class_splines_1_1_spline_set_1a56e4a4b716edeffd41f4e181471834e2" compoundref="_spline_set_g_c_8cc" startline="281" endline="287">eval</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a27011f83885afd8775ea9f1342a4274c" compoundref="_spline_set_g_c_8cc" startline="348" endline="360">eval2</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1ae0743377cb662b3dc3cc574293567a23" compoundref="_spline_set_8cc" startline="631" endline="643">eval2_D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1ac3ef65aeed29ac3be1a7c437bcdcfc54" compoundref="_spline_set_g_c_8cc" startline="695" endline="707">eval2_DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a997a652ccbf9eec633133775be48151a" compoundref="_spline_set_g_c_8cc" startline="872" endline="884">eval2_DDD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a7cba3bbf08b5678c672115e1934e5f52" compoundref="_spline_set_8cc" startline="443" endline="451">eval_D</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1af612358fa158b19ab6a9f63b1bc3a3c2" compoundref="_spline_set_g_c_8cc" startline="628" endline="634">eval_DD</referencedby>
        <referencedby refid="class_splines_1_1_spline_set_1a63f1cdbda9f2ba095e2fb9c4ee308907" compoundref="_spline_set_g_c_8cc" startline="802" endline="808">eval_DDD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1adcd4ccf768438db070ee0844ae2b5472" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="198" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1d7c5057754649f9902ed7d46eeba624" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::DD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>Second derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="205" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="205" bodyend="208"/>
        <referencedby refid="class_splines_1_1_spline_set_1adae772a7c894ae853c32042659b047e8" compoundref="_spline_set_8cc" startline="465" endline="473">eval_DD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1af47f7b8ac03f3db61c0bb37989dea75c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="211" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a518c67d4b64e310f2d1334d96910d1b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::DDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>Third derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="218" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="218" bodyend="221"/>
        <referencedby refid="class_splines_1_1_spline_set_1a86160ec72fb6c07ce81937046be05b2e" compoundref="_spline_set_8cc" startline="478" endline="482">eval_DDD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a2796e38da32fa7f6b9c5cdfc8d0b8aca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="224" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1afba184a1323067937596e62908355b6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::DDDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>DDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>4th derivative </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="231" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a7b9bb6035b266fc8217492fac1f707ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval_DDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="237" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a0f8aa34ab198a5755f81614e09bba366" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::DDDDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>DDDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
<para>5th derivative </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="244" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac103681b1aae62c9e5d4ba098f270364" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDDDD</definition>
        <argsstring>(real_type x, integer spl) const</argsstring>
        <name>eval_DDDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="250" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a603a09fc9f0751e0be4c0b8e2f116bbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Evaluate spline value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="257" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac225c4fd03702d444645a2c13667f247" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>First derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="264" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac553d6a8071ce7e7b6fe3af50acb1a5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Second derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="271" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a2a072343132e731f7444ac426528da70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Third derivative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="278" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a9c6f7d193784043968827219d75ff748" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDDD</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval_DDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>4th derivative </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="285" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1afc63747d3e68a6136e0de9d8827023a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval_DDDDD</definition>
        <argsstring>(real_type x, char const *name) const</argsstring>
        <name>eval_DDDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>5th derivative </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="292" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1af98dfe4c314766817c371a9f6e75f7c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="303" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="412" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aaaf06f270cd61d50886de7848854e179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate the fist derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="306" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="434" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aed588d14ea215be3fb3e73f2b5645f61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate the second derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="309" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="456" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a86160ec72fb6c07ce81937046be05b2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate the third derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="312" column="10" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="478" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae31881bd5a8de16ca5246d022381a78b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDDD</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval_DDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate the 4th derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="315" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac42b467a05f7f2e171f731b0ad0a5ee0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDDDD</definition>
        <argsstring>(real_type x, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval_DDDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate the 5th derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="318" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a6eaffa2796d14af84ac22a836da92492" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="327" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="421" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a7cba3bbf08b5678c672115e1934e5f52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the fist derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="335" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="443" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1adae772a7c894ae853c32042659b047e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the second derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="343" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="465" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a260519847bf321715f4aace757499bb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the third derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="351" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="487" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a7bb53c7f9d941ee695c2a5feb04942b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDDD</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval_DDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the 4th derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="359" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a77f1e64b9cfa83013fc74bb438306dcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDDDD</definition>
        <argsstring>(real_type x, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval_DDDDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the 5th derivative of all the splines at <computeroutput>x</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="367" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1afe95200df8a45b21901cfb432307e384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(integer spl, real_type zeta, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> using spline[spl] as independent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="381" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="595" bodyend="602"/>
        <referencedby refid="class_splines_1_1_spline_set_1a69332e0f11b20ecb76bd3bbcd055f8e3" compoundref="_spline_set_8cc" startline="616" endline="624">eval2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1a68e3346cd7db538110d094df34ca9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(integer spl, real_type zeta, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>| Evaluate the fist derivative of all the splines | at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="392" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="648" bodyend="655"/>
        <referencedby refid="class_splines_1_1_spline_set_1a1bf9fc35f84f538f32ec40bfcacd67f2" compoundref="_spline_set_8cc" startline="669" endline="677">eval2_D</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a85e7eab504e95b0a5ea368bcb4087b4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(integer spl, real_type zeta, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>| Evaluate the second derivative of all the splines | at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="403" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="705" bodyend="712"/>
        <referencedby refid="class_splines_1_1_spline_set_1a4e71a9ba44ea0c8c598fc592d49a787f" compoundref="_spline_set_8cc" startline="730" endline="738">eval2_DD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1abff045efd47aa584cea28b6f0e01a773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(integer spl, real_type zeta, vector&lt; real_type &gt; &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>| Evaluate the third derivative of all the splines | at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="414" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="767" bodyend="774"/>
        <referencedby refid="class_splines_1_1_spline_set_1acaeceb9b2a737b6ea0f9ab3d6d19aafe" compoundref="_spline_set_8cc" startline="794" endline="802">eval2_DDD</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8b5c40380c57b99fa49db7ce42548b82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(integer spl, real_type zeta, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> using spline[spl] as independent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="427" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="579" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae0743377cb662b3dc3cc574293567a23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(integer spl, real_type zeta, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the fist derivative of all the splines at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="439" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="631" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1dbfc691b6d0019a67d9b53a08a09702" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(integer spl, real_type zeta, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the second derivative of all the splines at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="451" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="684" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a31cbbab55ef47dc90a9593a6e294e2c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(integer spl, real_type zeta, real_type *const vals, integer incy=1) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> *const</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>incy</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the 3rd derivative of all the splines at <computeroutput>zeta</computeroutput> using spline[spl] as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="463" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="745" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a69332e0f11b20ecb76bd3bbcd055f8e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, char const *indep, char const *name) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the spline <computeroutput>name</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="480" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="616" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1bf9fc35f84f538f32ec40bfcacd67f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, char const *indep, char const *name) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate first derivative of the spline <computeroutput>name</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="491" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="669" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a4e71a9ba44ea0c8c598fc592d49a787f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, char const *indep, char const *name) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate second derivative of the spline <computeroutput>name</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="502" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="730" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1acaeceb9b2a737b6ea0f9ab3d6d19aafe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, char const *indep, char const *name) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate third derivative of the spline <computeroutput>name</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="513" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="794" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a804764d24acc988463cfb53d30dd6f29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, integer indep, integer spl) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the spline <computeroutput>spl</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="529" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="607" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1add938484ace9701d0ad145712d1a2e41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, integer indep, integer spl) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate first derivative of the spline <computeroutput>spl</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="540" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="660" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a49f86cc87171248ca05d42abd5eb18a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, integer indep, integer spl) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate second derivative of the spline <computeroutput>spl</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="551" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="717" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8da098657c75767a8f9cfb9c1723461a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
        <definition>real_type Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, integer indep, integer spl) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate third derivative of the spline <computeroutput>spl</computeroutput> at <computeroutput>zeta</computeroutput> using spline <computeroutput>indep</computeroutput> as independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="562" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="779" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a56e4a4b716edeffd41f4e181471834e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, GenericContainer &amp;vals) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="578" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1ff13e05cbd94754eee7b090c275508c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(vec_real_type const &amp;vec, GenericContainer &amp;vals) const</argsstring>
        <name>eval</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="585" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="294" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a5e62569c460d29458ea905714d1c570b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(real_type x, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="592" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3ff8bd850140ad01b08fe4735e8fe96f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval</definition>
        <argsstring>(vec_real_type const &amp;vec, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="604" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="328" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a27011f83885afd8775ea9f1342a4274c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="618" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="348" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a60386ada03bb1d31b7d65d07511afdf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="630" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="368" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8cfad48ac045f8db1272a06de67abe6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="642" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="399" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a51090695b20a5b33b57feae1fe5eb0d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="655" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="421" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a478bc7b6d15950d93d7f702fa62ff9fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="667" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="667" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3234150335b373096012bda0acffac0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="681" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="681" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a43e2d8256fedb385524f90b8eb3a54de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(real_type zeta, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="695" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="695" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1acfd20b345bbfe043020002f814e794e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="710" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="710" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8606380e41d364759cdfcd52e8184d07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, GenericContainer &amp;vals) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="724" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="455" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac7df3ef684097578edad2cf77774f495" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(vec_real_type const &amp;vec, GenericContainer &amp;vals) const</argsstring>
        <name>eval_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="734" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="468" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8875ee4a0a080b68dab0968c111ba899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(real_type x, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="744" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="484" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a5b50f300b8fa10f8930e994aa0ca6f47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_D</definition>
        <argsstring>(vec_real_type const &amp;vec, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="756" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="502" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a81ee781e17f437c7ef6c45d62ab681c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="767" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="522" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a413d57ffcc4ce2b8a56bac46f05bf899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="779" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="542" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1acc2de8e9ec4085f981d5ff1b65facf42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="791" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="573" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a40c5a8953764bf7a6da2a91900cc82a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="804" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="595" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aa99ea5409f8c9f434aeeb073dbec1ab1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="816" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="816" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a4cba770a65c89f3a2245e0709d17533b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="826" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="826" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3d49dc19e6e70042eb307194d18a1572" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(real_type zeta, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="840" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="840" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a2bddf50b124cc597b13671c933a78eea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_D</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_D</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="855" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="855" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1af612358fa158b19ab6a9f63b1bc3a3c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="869" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="628" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aafdf9e55dd9a9d51d8dcd4188648763b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(vec_real_type const &amp;vec, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="879" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="641" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a91bd8c113ba938fff24f10c7318e745a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(real_type x, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="889" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="657" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a8fcd7cf6d4cf83b671e2291b233e7ebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DD</definition>
        <argsstring>(vec_real_type const &amp;vec, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="900" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="675" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac3ef65aeed29ac3be1a7c437bcdcfc54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="911" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="695" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a49cb269c9f527ddfaabe31ca3230e5f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="923" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="715" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a1418204d67a71448cef755045c015822" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="935" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="746" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a0424923db81bb691ad0e57eeb3be4a43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="948" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="768" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae4297257013bdda20a26fed17cb08dec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="960" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="960" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a3ed3cc598084b834f9f484659996ef0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="974" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="974" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ada9414f59ee02bef8a02975879aa7ef5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(real_type zeta, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="988" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="988" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1afe8a27a57baeed294dd6ec25198865ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DD</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1003" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1003" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a63f1cdbda9f2ba095e2fb9c4ee308907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1017" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="802" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a617b515a8299584d4d9f92fe046579b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(vec_real_type const &amp;vec, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1027" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="815" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aee4c46c75c4921ae52f1d846ad01c601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(real_type x, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1037" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="834" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a5d5f132629395af3cb48b7a881986584" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval_DDD</definition>
        <argsstring>(vec_real_type const &amp;vec, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>x</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1048" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="852" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a997a652ccbf9eec633133775be48151a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1059" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="872" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a33c4e378faa9216ad0209d92dd8d485d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1071" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="892" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1acfb1d968183b1df2d12e39d98c5590bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1083" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="923" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae7420e28f6dd5913b24e428a89d53d52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(vec_real_type const &amp;zetas, integer indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
          <defname>gc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1096" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="945" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a679918b57c6d424811c16c66103a51b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1108" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1108" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ac7cf0e264662e5dcc4049ec2022a15d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1122" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1122" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1aebdadd4440d09532d8ff06c909e738f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(real_type zeta, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref></type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> and fill a map of values in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1136" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1136" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae43bf242a04ff71a4745ff2fa5935244" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::eval2_DDD</definition>
        <argsstring>(vec_real_type const &amp;zetas, char const *indep, vec_string_type const &amp;columns, GenericContainer &amp;vals) const</argsstring>
        <name>eval2_DDD</name>
        <param>
          <type>vec_real_type const &amp;</type>
          <declname>zetas</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indep</declname>
        </param>
        <param>
          <type>vec_string_type const &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>GenericContainer &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate all the splines at <computeroutput>zeta</computeroutput> values contained in vec and fill a map of vector in a GenericContainer with keys in <computeroutput>columns</computeroutput> and <computeroutput>indep</computeroutput> as independent spline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1151" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1151" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a7c61521bebcda475e45c8825d7250fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::build</definition>
        <argsstring>(integer nspl, integer npts, char const **headers, SplineType1D const *stype, real_type const *X, real_type const **Y, real_type const **Yp=nullptr)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>nspl</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>npts</declname>
        </param>
        <param>
          <type>char const **</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afebc3f20f002ddfdcbd2d725d1aa55df" kindref="member">SplineType1D</ref> const *</type>
          <declname>stype</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const *</type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const **</type>
          <declname>Y</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1afabb8610fb01952c2fcf1f17337bd44a" kindref="member">real_type</ref> const **</type>
          <declname>Yp</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Build a set of splines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nspl</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of splines </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>npts</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of points of each splines </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the names of the splines </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stype</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of each spline </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to X independent values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of <computeroutput>nspl</computeroutput> pointers to Y depentendent values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Yp</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of <computeroutput>nspl</computeroutput> pointers to Y derivative depentendent values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1173" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="214" bodyend="407"/>
        <referencedby refid="class_splines_1_1_spline_set_1a54372dbcce6c3cfd6f3aa815642df352" compoundref="_spline_set_g_c_8cc" startline="53" endline="274">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a54372dbcce6c3cfd6f3aa815642df352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::setup</definition>
        <argsstring>(GenericContainer const &amp;gc)</argsstring>
        <name>setup</name>
        <param>
          <type>GenericContainer const &amp;</type>
          <declname>gc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1184" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSetGC.cc" bodystart="53" bodyend="274"/>
        <referencedby refid="class_splines_1_1_spline_set_1ae945c85451097057dd58a924260c7315" compoundref="_spline_set_8hxx" startline="1187" endline="1188">build</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ae945c85451097057dd58a924260c7315" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::build</definition>
        <argsstring>(GenericContainer const &amp;gc)</argsstring>
        <name>build</name>
        <param>
          <type>GenericContainer const &amp;</type>
          <declname>gc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1187" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1187" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a003b897cf1d449f1ef3fdd0d011e5549" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Splines::SplineSet::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>Return spline type (as number) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1192" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1192" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1ab31367aa52124ceebe1f5c7836e4e853" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Splines::SplineSet::info</definition>
        <argsstring>() const</argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1196" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="109" bodyend="130"/>
        <referencedby refid="class_splines_1_1_spline_set_1a04d51bb478327e8394dcb458f5f8bdad" compoundref="_spline_set_8hxx" startline="1199" endline="1200">info</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a04d51bb478327e8394dcb458f5f8bdad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::info</definition>
        <argsstring>(ostream_type &amp;stream) const</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="namespace_splines_1a943d4ae4896c10228d57d004bd991e7f" kindref="member">ostream_type</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1199" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="1199" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splines::SplineSet::dump_table</definition>
        <argsstring>(ostream_type &amp;s, integer num_points) const</argsstring>
        <name>dump_table</name>
        <param>
          <type><ref refid="namespace_splines_1a943d4ae4896c10228d57d004bd991e7f" kindref="member">ostream_type</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_splines_1a0b83d8865bf650fca7ad1d657245a8a1" kindref="member">integer</ref></type>
          <declname>num_points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="1203" column="5" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.cc" bodystart="180" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespace_splines" kindref="compound">Splines</ref> Management Class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" line="32" column="3" bodyfile="/Users/enrico/Ricerca/develop/C++/pins-mechatronix/LibSources/submodules/Splines/src/SplineSet.hxx" bodystart="32" bodyend="1205"/>
    <listofallmembers>
      <member refid="class_splines_1_1_spline_set_1a7c61521bebcda475e45c8825d7250fb4" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_set_1ae945c85451097057dd58a924260c7315" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>build</name></member>
      <member refid="class_splines_1_1_spline_set_1ac3b19336658dfdfaa0518314cac2c0ae" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>D</name></member>
      <member refid="class_splines_1_1_spline_set_1a1d7c5057754649f9902ed7d46eeba624" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a518c67d4b64e310f2d1334d96910d1b6" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1afba184a1323067937596e62908355b6f" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>DDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a0f8aa34ab198a5755f81614e09bba366" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>DDDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a51564b52c8a9ff335993171480cd8770" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>dump_table</name></member>
      <member refid="class_splines_1_1_spline_set_1ad4dc94e17e08b48aa9ab6a221775aea7" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a603a09fc9f0751e0be4c0b8e2f116bbf" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1af98dfe4c314766817c371a9f6e75f7c0" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a6eaffa2796d14af84ac22a836da92492" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a56e4a4b716edeffd41f4e181471834e2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a1ff13e05cbd94754eee7b090c275508c" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a5e62569c460d29458ea905714d1c570b" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1a3ff8bd850140ad01b08fe4735e8fe96f" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval</name></member>
      <member refid="class_splines_1_1_spline_set_1afe95200df8a45b21901cfb432307e384" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a8b5c40380c57b99fa49db7ce42548b82" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a69332e0f11b20ecb76bd3bbcd055f8e3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a804764d24acc988463cfb53d30dd6f29" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a27011f83885afd8775ea9f1342a4274c" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a60386ada03bb1d31b7d65d07511afdf5" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a8cfad48ac045f8db1272a06de67abe6a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a51090695b20a5b33b57feae1fe5eb0d2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a478bc7b6d15950d93d7f702fa62ff9fa" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a3234150335b373096012bda0acffac0c" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a43e2d8256fedb385524f90b8eb3a54de" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1acfd20b345bbfe043020002f814e794e2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2</name></member>
      <member refid="class_splines_1_1_spline_set_1a1a68e3346cd7db538110d094df34ca9e" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1ae0743377cb662b3dc3cc574293567a23" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a1bf9fc35f84f538f32ec40bfcacd67f2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1add938484ace9701d0ad145712d1a2e41" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a81ee781e17f437c7ef6c45d62ab681c8" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a413d57ffcc4ce2b8a56bac46f05bf899" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1acc2de8e9ec4085f981d5ff1b65facf42" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a40c5a8953764bf7a6da2a91900cc82a9" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1aa99ea5409f8c9f434aeeb073dbec1ab1" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a4cba770a65c89f3a2245e0709d17533b" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a3d49dc19e6e70042eb307194d18a1572" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a2bddf50b124cc597b13671c933a78eea" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a85e7eab504e95b0a5ea368bcb4087b4e" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a1dbfc691b6d0019a67d9b53a08a09702" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a4e71a9ba44ea0c8c598fc592d49a787f" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a49f86cc87171248ca05d42abd5eb18a3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1ac3ef65aeed29ac3be1a7c437bcdcfc54" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a49cb269c9f527ddfaabe31ca3230e5f6" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a1418204d67a71448cef755045c015822" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a0424923db81bb691ad0e57eeb3be4a43" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1ae4297257013bdda20a26fed17cb08dec" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a3ed3cc598084b834f9f484659996ef0e" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1ada9414f59ee02bef8a02975879aa7ef5" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1afe8a27a57baeed294dd6ec25198865ab" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1abff045efd47aa584cea28b6f0e01a773" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a31cbbab55ef47dc90a9593a6e294e2c6" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1acaeceb9b2a737b6ea0f9ab3d6d19aafe" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a8da098657c75767a8f9cfb9c1723461a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a997a652ccbf9eec633133775be48151a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a33c4e378faa9216ad0209d92dd8d485d" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1acfb1d968183b1df2d12e39d98c5590bc" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ae7420e28f6dd5913b24e428a89d53d52" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a679918b57c6d424811c16c66103a51b3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ac7cf0e264662e5dcc4049ec2022a15d0" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1aebdadd4440d09532d8ff06c909e738f3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ae43bf242a04ff71a4745ff2fa5935244" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval2_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1adcd4ccf768438db070ee0844ae2b5472" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1ac225c4fd03702d444645a2c13667f247" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1aaaf06f270cd61d50886de7848854e179" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a7cba3bbf08b5678c672115e1934e5f52" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a8606380e41d364759cdfcd52e8184d07" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1ac7df3ef684097578edad2cf77774f495" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a8875ee4a0a080b68dab0968c111ba899" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1a5b50f300b8fa10f8930e994aa0ca6f47" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_D</name></member>
      <member refid="class_splines_1_1_spline_set_1af47f7b8ac03f3db61c0bb37989dea75c" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1ac553d6a8071ce7e7b6fe3af50acb1a5a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1aed588d14ea215be3fb3e73f2b5645f61" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1adae772a7c894ae853c32042659b047e8" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1af612358fa158b19ab6a9f63b1bc3a3c2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1aafdf9e55dd9a9d51d8dcd4188648763b" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a91bd8c113ba938fff24f10c7318e745a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a8fcd7cf6d4cf83b671e2291b233e7ebc" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DD</name></member>
      <member refid="class_splines_1_1_spline_set_1a2796e38da32fa7f6b9c5cdfc8d0b8aca" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a2a072343132e731f7444ac426528da70" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a86160ec72fb6c07ce81937046be05b2e" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a260519847bf321715f4aace757499bb5" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a63f1cdbda9f2ba095e2fb9c4ee308907" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a617b515a8299584d4d9f92fe046579b1" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1aee4c46c75c4921ae52f1d846ad01c601" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a5d5f132629395af3cb48b7a881986584" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a7b9bb6035b266fc8217492fac1f707ea" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a9c6f7d193784043968827219d75ff748" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ae31881bd5a8de16ca5246d022381a78b" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a7bb53c7f9d941ee695c2a5feb04942b3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ac103681b1aae62c9e5d4ba098f270364" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1afc63747d3e68a6136e0de9d8827023a3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1ac42b467a05f7f2e171f731b0ad0a5ee0" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a77f1e64b9cfa83013fc74bb438306dcc" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>eval_DDDDD</name></member>
      <member refid="class_splines_1_1_spline_set_1a4db60e3d41727aeb9bc8ba012bb684d2" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>get_headers</name></member>
      <member refid="class_splines_1_1_spline_set_1a9452e26f2c5f43c6a698e3fc4d50bd9a" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>getPosition</name></member>
      <member refid="class_splines_1_1_spline_set_1a8da96f04f23e2a3b19ae7e585031cff3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>getSpline</name></member>
      <member refid="class_splines_1_1_spline_set_1a9cce3de657c0ce33d5c459a8108b67c4" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>getSpline</name></member>
      <member refid="class_splines_1_1_spline_set_1aed8fe88ec9857d14a3c6cc1f234d3dd9" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>header</name></member>
      <member refid="class_splines_1_1_spline_set_1ab31367aa52124ceebe1f5c7836e4e853" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>info</name></member>
      <member refid="class_splines_1_1_spline_set_1a04d51bb478327e8394dcb458f5f8bdad" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>info</name></member>
      <member refid="class_splines_1_1_spline_set_1a2d96a3bee36753e13850063ce136d0b0" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>intersect</name></member>
      <member refid="class_splines_1_1_spline_set_1a3b987eb75ec2e97dd45a2a0d4aac7be9" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>isMonotone</name></member>
      <member refid="class_splines_1_1_spline_set_1aea09e45608def745cf0380ed188bace5" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_baseInt</name></member>
      <member refid="class_splines_1_1_spline_set_1a4362122dd58e3fb7a8fcf18a21f749da" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_basePointer</name></member>
      <member refid="class_splines_1_1_spline_set_1aa2ec18d578e49f4627b7630ce858245a" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_baseSplines</name></member>
      <member refid="class_splines_1_1_spline_set_1ad9e17fac296396621ecb06ed6b7ea5df" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_baseValue</name></member>
      <member refid="class_splines_1_1_spline_set_1a21bf732b09844a030a0a30563a765f97" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_header_to_position</name></member>
      <member refid="class_splines_1_1_spline_set_1a4410f332f3396390e0a3eebe38185e2f" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_is_monotone</name></member>
      <member refid="class_splines_1_1_spline_set_1a0b79a52c5dcaa6869e69530b85836b4f" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_name</name></member>
      <member refid="class_splines_1_1_spline_set_1a1e756404f394827b86aa78bceea9cfba" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_npts</name></member>
      <member refid="class_splines_1_1_spline_set_1a16e44df15805e29ca91573c3ae5ea7c7" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_nspl</name></member>
      <member refid="class_splines_1_1_spline_set_1a97ca287f283b8c75f508d5dd5bcc61ce" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_splines</name></member>
      <member refid="class_splines_1_1_spline_set_1afcd78b3ecadb6a0c74b333a085ff4eb9" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_X</name></member>
      <member refid="class_splines_1_1_spline_set_1a8eb4488ed3026ffb7940a9baf2c14ffe" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_Y</name></member>
      <member refid="class_splines_1_1_spline_set_1a2f476904148900dd2c665824f9a15803" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_Ymax</name></member>
      <member refid="class_splines_1_1_spline_set_1ad6e2901de37c9947ee83d8673fbd8c45" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_Ymin</name></member>
      <member refid="class_splines_1_1_spline_set_1a7341d56f12f811fdc6916db91be03fc1" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_Yp</name></member>
      <member refid="class_splines_1_1_spline_set_1a7c8709bfcc938b7d2ba260d408d8e8d1" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>m_Ypp</name></member>
      <member refid="class_splines_1_1_spline_set_1a4e09e3499d49a5665a5f053564d8833f" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>name</name></member>
      <member refid="class_splines_1_1_spline_set_1a36b4252e0875da5d9edb5555a6e3483b" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>name_list</name></member>
      <member refid="class_splines_1_1_spline_set_1a36c5996f4200172f4c30df6ca36a6ef5" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>numPoints</name></member>
      <member refid="class_splines_1_1_spline_set_1abcb795539844a0cd8c54c2ac84aecc37" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>numSplines</name></member>
      <member refid="class_splines_1_1_spline_set_1a6a5eee6ca84c57b6606ae80fd57ac1ea" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>operator()</name></member>
      <member refid="class_splines_1_1_spline_set_1a1cc5e4842d49b7ce009caff7ef08fcab" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>operator=</name></member>
      <member refid="class_splines_1_1_spline_set_1a54372dbcce6c3cfd6f3aa815642df352" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>setup</name></member>
      <member refid="class_splines_1_1_spline_set_1a7c10427c73686b27f04efe8eadf7731c" prot="private" virt="non-virtual"><scope>Splines::SplineSet</scope><name>SplineSet</name></member>
      <member refid="class_splines_1_1_spline_set_1a2c4d2a0f5db6b384c24100d8a5f385e7" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>SplineSet</name></member>
      <member refid="class_splines_1_1_spline_set_1a003b897cf1d449f1ef3fdd0d011e5549" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>type</name></member>
      <member refid="class_splines_1_1_spline_set_1a4049fd437c9f61bd14e7fe9116c498f0" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>xMax</name></member>
      <member refid="class_splines_1_1_spline_set_1a0a8c9b879b58f9b6bd39354009a1a087" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>xMin</name></member>
      <member refid="class_splines_1_1_spline_set_1adeca857e1b4b29081e53ab421f17694d" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>xNode</name></member>
      <member refid="class_splines_1_1_spline_set_1a8b746b8e267170815a6c5ca25527c84c" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>xNodes</name></member>
      <member refid="class_splines_1_1_spline_set_1afabab0a38303ba992e0f2bda009b7474" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yMax</name></member>
      <member refid="class_splines_1_1_spline_set_1ac3296741adea291f93e78e45f7080f24" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yMax</name></member>
      <member refid="class_splines_1_1_spline_set_1a53405bf2844b89b272c63c326ed74b22" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yMin</name></member>
      <member refid="class_splines_1_1_spline_set_1a24e41aec63ee242303b157da87ed11b3" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yMin</name></member>
      <member refid="class_splines_1_1_spline_set_1af7935d5efc121117822caec1ed21a930" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yNode</name></member>
      <member refid="class_splines_1_1_spline_set_1a3d951bab68e246f384c8f688f5a5cbf1" prot="public" virt="non-virtual"><scope>Splines::SplineSet</scope><name>yNodes</name></member>
      <member refid="class_splines_1_1_spline_set_1a3b0b43aa1f1e099b4070db20886f5caf" prot="public" virt="virtual"><scope>Splines::SplineSet</scope><name>~SplineSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
