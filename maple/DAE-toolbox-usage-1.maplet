

# 
# DAE-toolbox usage example 1
# 

restart:
read("DAE-toolbox.maplet");
# The DAE
# The original DAE
dx := diff(x(t),t);
dy := diff(y(t),t);
du := diff(u(t),t);
dv := diff(v(t),t);
PARA := x(t)^2-y(t);
# The DAE system of parabolic pendulum
EQ1 := dx-u(t);
EQ2 := dy-v(t);
EQ3 := du*(1+4*x(t)^2)+2*x(t)*dv+4*x(t)*u(t)^2+x(t)*g+2*x(t)*(1+2*PARA)*lambda(t);
EQ4 := dv+2*u(t)^2+2*x(t)*du-g/2-2*PARA*lambda(t);
EQ5 := x(t)^2+PARA^2-1;
VARS  := [x(t),y(t),u(t),v(t),lambda(t)];
DVARS := diff(VARS,t);
# Index Reduction using Library
Typesetting:-Suppress(VARS);
# Original DAE
DAE0 := [EQ||(1..5)]:
# Put DAE in standard form separating algebraic part
E0, G0, ALG0, r := DAE_separate_algebraic_bis( DAE0, DVARS );
E1, G1, ALG1, r := DAEreduceBy1TheIndexTris( E0, G0, ALG0, DVARS ):
E1 := simplify(E1);
G1 := simplify(G1);
ALG1 := simplify(ALG1);
E2, G2, ALG2, r := DAEreduceBy1TheIndexTris( E1, G1, ALG1, DVARS ):
E2 := simplify(E2);
G2 := simplify(G2);
ALG2 := simplify(ALG2);
E3, G3, ALG3, r := DAEreduceBy1TheIndexTris( E2, G2, ALG2, DVARS ):
E3 := simplify(E3);
G3 := simplify(G3);
ALG3 := simplify(ALG3);
# The ODE is on the form
# 
# E(x,t) x' = G(x,t)
# 
# Explicit solve as x' = f(x,t) the ODE where f(x,t) = E(x,t)^(-1) G(x,t)
RHS := convert(simplify(LinearSolve(E3,G3)),list);
ODE := [seq(DVARS[i]=RHS[i],i=1..5)]: <%>;
# The hidded constraints are collected in ALG1, ALG2, ALG3
HIDDEN := convert(<ALG0,ALG1,ALG2>,list);
# Consistent Initial Condition
FUN_TO_VAR := x(t) = x, y(t) = y, u(t) = u, v(t) = v, lambda(t)=lambda;
# Find a correct initial condition satisfying the hidden costraints
CONSTRAINTS := subs(FUN_TO_VAR,HIDDEN);
INI := allvalues(solve( [op(CONSTRAINTS),x=0,u=2], [x,y,u,v,lambda] ));
# MATLAB code Generation
RHS_ODE := subs(FUN_TO_VAR,RHS):
# Generate MATLAB code
F_TO_MATLAB( RHS_ODE, [x,y,u,v,lambda], "ode" );
JODE := JACOBIAN(RHS_ODE,[x,y,u,v,lambda]):
JF_TO_MATLAB( JODE, [x,y,u,v,lambda], "jode" );
h := subs(FUN_TO_VAR, HIDDEN ): <%>;
F_TO_MATLAB( h, [x,y,u,v,lambda], "h" ); 
JF_TO_MATLAB( JACOBIAN(h,[x,y,u,v,lambda]), [x,y,u,v,lambda], "jh" );


